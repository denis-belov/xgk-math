; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IDENT@MAT4@DATA@XGK@@3QBMB DD 03f800000r	; 1	; XGK::DATA::MAT4::IDENT
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
PUBLIC	?tan@@YAMM@Z					; tan
PUBLIC	?set32@MAT4@DATA@XGK@@YAXPEAXMMMMMMMMMMMMMMMM@Z	; XGK::DATA::MAT4::set32
PUBLIC	?premul32@MAT4@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::MAT4::premul32
PUBLIC	?postmul32@MAT4@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::MAT4::postmul32
PUBLIC	?makeTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::MAT4::makeTrans32
PUBLIC	?preTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::MAT4::preTrans32
PUBLIC	?postTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::MAT4::postTrans32
PUBLIC	?makeTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z	; XGK::DATA::MAT4::makeTransValue32
PUBLIC	?preTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z	; XGK::DATA::MAT4::preTransValue32
PUBLIC	?postTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z	; XGK::DATA::MAT4::postTransValue32
PUBLIC	?makeRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z	; XGK::DATA::MAT4::makeRotQuat32
PUBLIC	?preRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::MAT4::preRotQuat32
PUBLIC	?postRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z	; XGK::DATA::MAT4::postRotQuat32
PUBLIC	?transp32@MAT4@DATA@XGK@@YAXPEAX@Z		; XGK::DATA::MAT4::transp32
PUBLIC	?invns32@MAT4@DATA@XGK@@YAXPEAX@Z		; XGK::DATA::MAT4::invns32
PUBLIC	?makeProjPersp32@MAT4@DATA@XGK@@YAXPEAXMMMMM@Z	; XGK::DATA::MAT4::makeProjPersp32
PUBLIC	__real@3c0efa35
PUBLIC	__real@3f800000
PUBLIC	__real@bf000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	tanf:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?premul32@MAT4@DATA@XGK@@YAXPEAX0@Z DD imagerel $LN4
	DD	imagerel $LN4+1374
	DD	imagerel $unwind$?premul32@MAT4@DATA@XGK@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?postmul32@MAT4@DATA@XGK@@YAXPEAX0@Z DD imagerel $LN4
	DD	imagerel $LN4+1322
	DD	imagerel $unwind$?postmul32@MAT4@DATA@XGK@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?preTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z DD imagerel $LN4
	DD	imagerel $LN4+1189
	DD	imagerel $unwind$?preTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?postTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z DD imagerel $LN4
	DD	imagerel $LN4+1277
	DD	imagerel $unwind$?postTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?makeRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z DD imagerel $LN4
	DD	imagerel $LN4+331
	DD	imagerel $unwind$?makeRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?preRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z DD imagerel $LN4
	DD	imagerel $LN4+939
	DD	imagerel $unwind$?preRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?postRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z DD imagerel $LN4
	DD	imagerel $LN4+776
	DD	imagerel $unwind$?postRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?invns32@MAT4@DATA@XGK@@YAXPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?invns32@MAT4@DATA@XGK@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?makeProjPersp32@MAT4@DATA@XGK@@YAXPEAXMMMMM@Z DD imagerel $LN7
	DD	imagerel $LN7+286
	DD	imagerel $unwind$?makeProjPersp32@MAT4@DATA@XGK@@YAXPEAXMMMMM@Z
pdata	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3c0efa35
CONST	SEGMENT
__real@3c0efa35 DD 03c0efa35r			; 0.00872665
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?makeProjPersp32@MAT4@DATA@XGK@@YAXPEAXMMMMM@Z DD 082701H
	DD	028827H
	DD	03781eH
	DD	046816H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?invns32@MAT4@DATA@XGK@@YAXPEAX@Z DD 0b5e01H
	DD	0a85eH
	DD	019848H
	DD	02883cH
	DD	037831H
	DD	046827H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?postRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z DD 0167b01H
	DD	01f87bH
	DD	02e875H
	DD	03d86fH
	DD	04c869H
	DD	05b854H
	DD	06a849H
	DD	07983bH
	DD	088832H
	DD	09782aH
	DD	0a6823H
	DD	017010aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?preRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z DD 0167c01H
	DD	01f87cH
	DD	02e876H
	DD	03d859H
	DD	04c853H
	DD	05b84eH
	DD	06a844H
	DD	07983bH
	DD	088832H
	DD	09782aH
	DD	0a6823H
	DD	017010aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?makeRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z DD 0f6101H
	DD	0c861H
	DD	01b857H
	DD	02a84eH
	DD	039849H
	DD	048839H
	DD	05782fH
	DD	066827H
	DD	0e207H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?postTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z DD 0168a01H
	DD	07f88aH
	DD	08e884H
	DD	09d87cH
	DD	0ac874H
	DD	0bb86fH
	DD	0ca86aH
	DD	0d9865H
	DD	0e8860H
	DD	0f785bH
	DD	010683eH
	DD	023010aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?preTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z DD 0169701H
	DD	04f897H
	DD	05e891H
	DD	06d88bH
	DD	07c885H
	DD	08b880H
	DD	09a87bH
	DD	0a9876H
	DD	0b8871H
	DD	0c786cH
	DD	0d6868H
	DD	01d010aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?postmul32@MAT4@DATA@XGK@@YAXPEAX0@Z DD 0169601H
	DD	03f896H
	DD	04e890H
	DD	05d88aH
	DD	06c884H
	DD	07b87fH
	DD	08a87aH
	DD	099875H
	DD	0a8870H
	DD	0b786bH
	DD	0c6867H
	DD	01b010aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?premul32@MAT4@DATA@XGK@@YAXPEAX0@Z DD 0169301H
	DD	04f893H
	DD	05e88dH
	DD	06d887H
	DD	07c881H
	DD	08b87cH
	DD	09a877H
	DD	0a9872H
	DD	0b886dH
	DD	0c7868H
	DD	0d6864H
	DD	01d010aH
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?makeProjPersp32@MAT4@DATA@XGK@@YAXPEAXMMMMM@Z
_TEXT	SEGMENT
dst$ = 96
fov$ = 104
aspect$ = 112
near_$ = 120
far_$ = 128
zoom$ = 136
?makeProjPersp32@MAT4@DATA@XGK@@YAXPEAXMMMMM@Z PROC	; XGK::DATA::MAT4::makeProjPersp32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 361
$LN7:
	push	rbx
	sub	rsp, 80					; 00000050H
; Line 366
	mulss	xmm1, DWORD PTR __real@3c0efa35
	mov	rbx, rcx
	movaps	XMMWORD PTR [rsp+64], xmm6
	movaps	xmm6, xmm2
	movaps	XMMWORD PTR [rsp+48], xmm7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 242
	movaps	xmm0, xmm1
	movaps	XMMWORD PTR [rsp+32], xmm8
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 361
	movaps	xmm8, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 242
	call	tanf
	movaps	xmm7, xmm0
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 373
	mov	DWORD PTR [rbx+44], -1082130432		; bf800000H
	mulss	xmm7, xmm8
	movaps	xmm4, xmm8
	xor	eax, eax
	addss	xmm4, xmm8
	mov	QWORD PTR [rbx+12], rax
	mov	QWORD PTR [rbx+48], rax
	divss	xmm7, DWORD PTR zoom$[rsp]
	mov	QWORD PTR [rbx+4], rax
	mov	QWORD PTR [rbx+24], rax
	mov	DWORD PTR [rbx+60], eax
	movaps	xmm0, xmm4
	movaps	xmm1, xmm7
	movaps	xmm5, xmm7
	addss	xmm1, xmm7
	subss	xmm5, xmm1
	mulss	xmm1, xmm6
; Line 381
	movaps	xmm6, XMMWORD PTR [rsp+64]
	movaps	xmm2, xmm1
	mulss	xmm2, DWORD PTR __real@bf000000
	movaps	xmm3, xmm2
	addss	xmm3, xmm1
	movaps	xmm1, xmm3
	addss	xmm3, xmm2
	subss	xmm1, xmm2
	divss	xmm0, xmm1
	divss	xmm3, xmm1
	movss	DWORD PTR [rbx], xmm0
	movaps	xmm0, xmm7
	subss	xmm0, xmm5
	movss	DWORD PTR [rbx+32], xmm3
	movss	xmm3, DWORD PTR far_$[rsp]
	addss	xmm5, xmm7
	movaps	xmm7, XMMWORD PTR [rsp+48]
	movaps	xmm2, xmm3
	subss	xmm2, xmm8
	divss	xmm4, xmm0
	divss	xmm5, xmm0
	movaps	xmm0, xmm8
	movss	DWORD PTR [rbx+20], xmm4
	addss	xmm0, xmm3
	movss	DWORD PTR [rbx+36], xmm5
	addss	xmm3, xmm3
	divss	xmm0, xmm2
	mulss	xmm3, xmm8
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm8, XMMWORD PTR [rsp+32]
	divss	xmm3, xmm2
	movss	DWORD PTR [rbx+40], xmm0
	xorps	xmm3, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR [rbx+56], xmm3
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?makeProjPersp32@MAT4@DATA@XGK@@YAXPEAXMMMMM@Z ENDP	; XGK::DATA::MAT4::makeProjPersp32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?invns32@MAT4@DATA@XGK@@YAXPEAX@Z
_TEXT	SEGMENT
dst$ = 96
?invns32@MAT4@DATA@XGK@@YAXPEAX@Z PROC			; XGK::DATA::MAT4::invns32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 334
$LN4:
	sub	rsp, 88					; 00000058H
; Line 338
	movss	xmm1, DWORD PTR [rcx+4]
; Line 342
	xor	eax, eax
	movss	xmm5, DWORD PTR [rcx+16]
	movss	xmm3, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm2, DWORD PTR [rcx+8]
	movss	xmm4, DWORD PTR [rcx+24]
	movaps	XMMWORD PTR [rsp+64], xmm6
	movss	xmm6, DWORD PTR [rcx+36]
	movaps	XMMWORD PTR [rsp+48], xmm7
	movss	xmm7, DWORD PTR [rcx+32]
	movaps	XMMWORD PTR [rsp+32], xmm8
	movss	xmm8, DWORD PTR [rcx+48]
	movaps	XMMWORD PTR [rsp+16], xmm9
	movaps	xmm0, xmm8
	mulss	xmm0, DWORD PTR [rcx]
	mov	DWORD PTR [rcx+12], eax
	movss	xmm9, DWORD PTR [rcx+52]
	movaps	XMMWORD PTR [rsp], xmm10
	movss	xmm10, DWORD PTR [rcx+56]
	xorps	xmm0, xmm3
	movss	DWORD PTR [rcx+8], xmm7
	mulss	xmm7, xmm8
	mov	DWORD PTR [rcx+28], eax
	movss	DWORD PTR [rcx+4], xmm5
	mulss	xmm5, xmm8
	mov	DWORD PTR [rcx+44], eax
; Line 350
	movaps	xmm8, XMMWORD PTR [rsp+32]
	xorps	xmm7, xmm3
	movss	DWORD PTR [rcx+16], xmm1
	mulss	xmm1, xmm9
	xorps	xmm5, xmm3
	mov	DWORD PTR [rcx+60], 1065353216		; 3f800000H
	movss	DWORD PTR [rcx+32], xmm2
	mulss	xmm2, xmm10
	subss	xmm0, xmm1
	movss	DWORD PTR [rcx+36], xmm4
	mulss	xmm4, xmm10
	mulss	xmm10, DWORD PTR [rcx+40]
	subss	xmm0, xmm2
	movss	DWORD PTR [rcx+24], xmm6
	movss	DWORD PTR [rcx+48], xmm0
	movaps	xmm0, xmm9
	mulss	xmm0, DWORD PTR [rcx+20]
	mulss	xmm9, xmm6
	movaps	xmm6, XMMWORD PTR [rsp+64]
	subss	xmm5, xmm0
	subss	xmm7, xmm9
	movaps	xmm9, XMMWORD PTR [rsp+16]
	subss	xmm5, xmm4
	subss	xmm7, xmm10
	movaps	xmm10, XMMWORD PTR [rsp]
	movss	DWORD PTR [rcx+52], xmm5
	movss	DWORD PTR [rcx+56], xmm7
	movaps	xmm7, XMMWORD PTR [rsp+48]
	add	rsp, 88					; 00000058H
	ret	0
?invns32@MAT4@DATA@XGK@@YAXPEAX@Z ENDP			; XGK::DATA::MAT4::invns32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?transp32@MAT4@DATA@XGK@@YAXPEAX@Z
_TEXT	SEGMENT
dst$ = 8
?transp32@MAT4@DATA@XGK@@YAXPEAX@Z PROC			; XGK::DATA::MAT4::transp32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 322
	mov	eax, DWORD PTR [rcx+4]
	movss	xmm0, DWORD PTR [rcx+16]
	movss	xmm3, DWORD PTR [rcx+32]
	movss	xmm5, DWORD PTR [rcx+48]
	movss	xmm1, DWORD PTR [rcx+36]
	movss	xmm4, DWORD PTR [rcx+52]
	movss	xmm2, DWORD PTR [rcx+56]
	mov	DWORD PTR [rcx+16], eax
	mov	eax, DWORD PTR [rcx+8]
	mov	DWORD PTR [rcx+32], eax
	mov	eax, DWORD PTR [rcx+12]
	mov	DWORD PTR [rcx+48], eax
	mov	eax, DWORD PTR [rcx+24]
	mov	DWORD PTR [rcx+36], eax
	mov	eax, DWORD PTR [rcx+28]
	mov	DWORD PTR [rcx+52], eax
	mov	eax, DWORD PTR [rcx+44]
	movss	DWORD PTR [rcx+44], xmm2
	mov	DWORD PTR [rcx+56], eax
	movss	DWORD PTR [rcx+4], xmm0
	movss	DWORD PTR [rcx+8], xmm3
	movss	DWORD PTR [rcx+24], xmm1
	movss	DWORD PTR [rcx+12], xmm5
	movss	DWORD PTR [rcx+28], xmm4
; Line 330
	ret	0
?transp32@MAT4@DATA@XGK@@YAXPEAX@Z ENDP			; XGK::DATA::MAT4::transp32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?postRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
tv964 = 0
__real@3f800000$1$ = 4
xz$1$ = 192
dst_matrix_addr$ = 192
xw$1$ = 200
quaternion_addr$ = 200
zw$1$ = 208
tv969 = 216
?postRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::postRotQuat32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 282
$LN4:
	mov	rax, rsp
	sub	rsp, 184				; 000000b8H
; Line 288
	movss	xmm0, DWORD PTR [rdx+8]
	movss	xmm1, DWORD PTR [rdx+4]
	movaps	xmm3, xmm0
	movss	xmm5, DWORD PTR [rdx]
	addss	xmm3, xmm0
	movaps	XMMWORD PTR [rax-24], xmm6
	movaps	xmm4, xmm1
	movaps	XMMWORD PTR [rax-40], xmm7
	movaps	xmm7, xmm5
	movaps	XMMWORD PTR [rax-56], xmm8
	addss	xmm7, xmm5
	movaps	XMMWORD PTR [rax-72], xmm9
	movaps	xmm8, xmm1
	addss	xmm8, xmm1
	movaps	XMMWORD PTR [rax-88], xmm10
	movss	xmm10, DWORD PTR [rdx+12]
	movaps	XMMWORD PTR [rax-104], xmm11
	movaps	xmm2, xmm10
	movaps	xmm11, xmm0
	mulss	xmm4, xmm7
	movaps	xmm9, xmm10
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	XMMWORD PTR [rsp+48], xmm13
	movaps	XMMWORD PTR [rsp+32], xmm14
	movaps	XMMWORD PTR [rsp+16], xmm15
	movaps	xmm6, xmm8
	mulss	xmm11, xmm7
; Line 297
	movss	xmm12, DWORD PTR [rcx+24]
	mulss	xmm6, xmm0
	mulss	xmm2, xmm8
	mulss	xmm8, xmm1
	movaps	xmm14, xmm6
	movss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm9, xmm3
	movaps	xmm15, xmm1
	mulss	xmm3, xmm0
	subss	xmm15, xmm8
	mulss	xmm10, xmm7
	movaps	xmm0, xmm4
	subss	xmm0, xmm9
	mulss	xmm7, xmm5
	movss	xmm5, DWORD PTR [rcx+32]
	subss	xmm15, xmm3
	addss	xmm9, xmm4
	movss	xmm4, DWORD PTR [rcx]
	subss	xmm1, xmm7
	movss	xmm7, DWORD PTR [rcx+4]
	movss	DWORD PTR tv969[rsp], xmm0
	subss	xmm14, xmm10
	movaps	xmm0, xmm2
	addss	xmm10, xmm6
	movss	xmm6, DWORD PTR [rcx+16]
	addss	xmm0, xmm11
	subss	xmm11, xmm2
	movss	DWORD PTR zw$1$[rsp], xmm9
	movss	xmm9, DWORD PTR [rcx+20]
	movaps	xmm13, xmm1
	subss	xmm1, xmm8
	movaps	xmm2, xmm6
	mulss	xmm2, DWORD PTR zw$1$[rsp]
	subss	xmm13, xmm3
	movss	xmm8, DWORD PTR [rcx+36]
	movaps	xmm3, xmm4
	mulss	xmm3, DWORD PTR tv969[rsp]
	movss	DWORD PTR tv964[rsp], xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm15
	movss	DWORD PTR __real@3f800000$1$[rsp], xmm1
	movaps	xmm1, xmm5
	movss	DWORD PTR xz$1$[rsp], xmm11
	mulss	xmm1, DWORD PTR xz$1$[rsp]
	addss	xmm2, xmm0
	movss	xmm11, DWORD PTR [rcx+40]
	movaps	xmm0, xmm6
	mulss	xmm0, xmm13
	addss	xmm2, xmm1
	movss	DWORD PTR xw$1$[rsp], xmm10
	movss	xmm10, DWORD PTR [rcx+8]
	movaps	xmm1, xmm5
	addss	xmm3, xmm0
; Line 305
	movss	DWORD PTR [rcx], xmm2
; Line 309
	mulss	xmm1, DWORD PTR xw$1$[rsp]
	lea	r11, QWORD PTR [rax]
	mulss	xmm4, DWORD PTR tv964[rsp]
	movaps	xmm2, xmm9
	mulss	xmm2, DWORD PTR zw$1$[rsp]
	addss	xmm3, xmm1
	mulss	xmm5, DWORD PTR __real@3f800000$1$[rsp]
	movaps	xmm0, xmm7
	mulss	xmm0, xmm15
	movaps	xmm1, xmm8
	mulss	xmm1, DWORD PTR xz$1$[rsp]
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+16], xmm3
	mulss	xmm6, xmm14
	movaps	xmm3, xmm7
	movaps	xmm0, xmm9
	mulss	xmm9, xmm14
	addss	xmm2, xmm1
	mulss	xmm0, xmm13
	addss	xmm6, xmm4
	movaps	xmm1, xmm8
	mulss	xmm1, DWORD PTR xw$1$[rsp]
	movss	xmm4, DWORD PTR tv969[rsp]
	mulss	xmm8, DWORD PTR __real@3f800000$1$[rsp]
	mulss	xmm3, xmm4
	addss	xmm6, xmm5
	movss	DWORD PTR [rcx+4], xmm2
	movaps	xmm2, xmm12
	mulss	xmm2, DWORD PTR zw$1$[rsp]
	addss	xmm3, xmm0
	mulss	xmm4, xmm10
	movaps	xmm0, xmm10
	movss	DWORD PTR [rcx+32], xmm6
	movaps	xmm6, XMMWORD PTR [r11-24]
	mulss	xmm0, xmm15
	movaps	xmm15, XMMWORD PTR [rsp+16]
	addss	xmm3, xmm1
	movaps	xmm1, xmm11
	mulss	xmm1, DWORD PTR xz$1$[rsp]
	addss	xmm2, xmm0
	movaps	xmm0, xmm12
	mulss	xmm12, xmm14
	movaps	xmm14, XMMWORD PTR [rsp+32]
	movss	DWORD PTR [rcx+20], xmm3
	addss	xmm2, xmm1
	movss	xmm3, DWORD PTR tv964[rsp]
	movaps	xmm1, xmm11
	mulss	xmm11, DWORD PTR __real@3f800000$1$[rsp]
	mulss	xmm1, DWORD PTR xw$1$[rsp]
	mulss	xmm7, xmm3
	mulss	xmm3, xmm10
	movaps	xmm10, XMMWORD PTR [r11-88]
	addss	xmm9, xmm7
	movaps	xmm7, XMMWORD PTR [r11-40]
	mulss	xmm0, xmm13
	addss	xmm3, xmm12
	movaps	xmm12, XMMWORD PTR [r11-120]
	movaps	xmm13, XMMWORD PTR [rsp+48]
	addss	xmm9, xmm8
	movaps	xmm8, XMMWORD PTR [r11-56]
	addss	xmm4, xmm0
	addss	xmm3, xmm11
	movss	DWORD PTR [rcx+8], xmm2
	movaps	xmm11, XMMWORD PTR [r11-104]
	movss	DWORD PTR [rcx+36], xmm9
	movaps	xmm9, XMMWORD PTR [r11-72]
	addss	xmm4, xmm1
	movss	DWORD PTR [rcx+40], xmm3
	movss	DWORD PTR [rcx+24], xmm4
	mov	rsp, r11
	ret	0
?postRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::postRotQuat32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?preRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
xz$1$ = 0
xw$1$ = 4
__real@3f800000$1$ = 8
tv1087 = 192
dst_matrix_addr$ = 192
tv1092 = 200
quaternion_addr$ = 200
tv1085 = 208
zw$1$ = 216
?preRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::preRotQuat32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 251
$LN4:
	mov	rax, rsp
	sub	rsp, 184				; 000000b8H
; Line 257
	movss	xmm0, DWORD PTR [rdx+8]
	movss	xmm1, DWORD PTR [rdx+4]
	movaps	xmm3, xmm0
	movss	xmm5, DWORD PTR [rdx]
	addss	xmm3, xmm0
	movaps	XMMWORD PTR [rax-24], xmm6
	movaps	xmm4, xmm1
	movaps	XMMWORD PTR [rax-40], xmm7
	movaps	xmm7, xmm5
	movaps	XMMWORD PTR [rax-56], xmm8
	addss	xmm7, xmm5
	movaps	XMMWORD PTR [rax-72], xmm9
	movaps	xmm8, xmm1
	movaps	XMMWORD PTR [rax-88], xmm10
	addss	xmm8, xmm1
	movaps	XMMWORD PTR [rax-104], xmm11
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	XMMWORD PTR [rsp+48], xmm13
	movss	xmm13, DWORD PTR [rdx+12]
	movaps	xmm2, xmm13
	mulss	xmm4, xmm7
	mulss	xmm2, xmm8
	movaps	xmm12, xmm13
	movaps	XMMWORD PTR [rsp+32], xmm14
	movaps	XMMWORD PTR [rsp+16], xmm15
	movaps	xmm6, xmm8
	movaps	xmm14, xmm0
	mulss	xmm12, xmm3
; Line 272
	movss	xmm15, DWORD PTR [rcx+48]
	movaps	xmm10, xmm2
	mulss	xmm3, xmm0
	movaps	xmm9, xmm4
	mulss	xmm6, xmm0
	subss	xmm9, xmm12
	movss	xmm0, DWORD PTR __real@3f800000
	addss	xmm12, xmm4
	movss	xmm4, DWORD PTR [rcx+4]
	movaps	xmm11, xmm0
	mulss	xmm14, xmm7
	mulss	xmm13, xmm7
	mulss	xmm8, xmm1
	addss	xmm10, xmm14
	subss	xmm14, xmm2
	mulss	xmm7, xmm5
	movss	xmm5, DWORD PTR [rcx+8]
	subss	xmm11, xmm8
	movss	DWORD PTR zw$1$[rsp], xmm12
	movaps	xmm1, xmm5
	subss	xmm0, xmm7
	mulss	xmm1, xmm10
	movaps	xmm12, xmm6
	movss	DWORD PTR xz$1$[rsp], xmm14
	movss	xmm14, DWORD PTR [rcx+32]
	subss	xmm11, xmm3
	subss	xmm12, xmm13
	movaps	xmm7, xmm0
	addss	xmm13, xmm6
	movss	xmm6, DWORD PTR [rcx+16]
	subss	xmm0, xmm8
	movss	xmm8, DWORD PTR [rcx]
	subss	xmm7, xmm3
	movaps	xmm2, xmm8
	movaps	xmm3, xmm6
	mulss	xmm2, xmm11
	movss	DWORD PTR __real@3f800000$1$[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+20]
	movss	DWORD PTR tv1092[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+36]
	movss	DWORD PTR tv1087[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+52]
	movss	DWORD PTR tv1085[rsp], xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm9
	movss	DWORD PTR xw$1$[rsp], xmm13
	movss	xmm13, DWORD PTR [rcx+24]
	addss	xmm2, xmm0
	mulss	xmm3, xmm11
; Line 275
	movss	xmm0, DWORD PTR tv1092[rsp]
	mulss	xmm0, xmm9
	addss	xmm2, xmm1
	movss	DWORD PTR [rcx], xmm2
; Line 263
	addss	xmm3, xmm0
	movaps	xmm1, xmm13
; Line 275
	movss	xmm0, DWORD PTR tv1087[rsp]
	movaps	xmm2, xmm14
	mulss	xmm0, xmm9
	mulss	xmm1, xmm10
	mulss	xmm2, xmm11
	addss	xmm3, xmm1
	movss	xmm1, DWORD PTR [rcx+40]
	mulss	xmm1, xmm10
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1085[rsp]
	mulss	xmm0, xmm9
	movss	xmm9, DWORD PTR zw$1$[rsp]
	movss	DWORD PTR [rcx+16], xmm3
	movaps	xmm3, xmm15
	addss	xmm2, xmm1
	mulss	xmm3, xmm11
	movss	xmm11, DWORD PTR [rcx+56]
	movaps	xmm1, xmm11
	addss	xmm3, xmm0
	mulss	xmm1, xmm10
	movss	xmm10, DWORD PTR tv1092[rsp]
	movaps	xmm0, xmm4
	mulss	xmm0, xmm7
	addss	xmm3, xmm1
	movss	DWORD PTR [rcx+32], xmm2
	movaps	xmm2, xmm8
	movaps	xmm1, xmm5
	mulss	xmm2, xmm9
	mulss	xmm1, xmm12
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+48], xmm3
	movaps	xmm3, xmm10
	movaps	xmm0, xmm9
	mulss	xmm0, xmm6
	mulss	xmm3, xmm7
	addss	xmm2, xmm1
	movaps	xmm1, xmm13
	mulss	xmm1, xmm12
	addss	xmm3, xmm0
	movaps	xmm0, xmm9
	movss	xmm9, DWORD PTR [rcx+40]
	mulss	xmm0, xmm14
; Line 276
	movss	DWORD PTR [rcx+4], xmm2
	movss	xmm2, DWORD PTR tv1087[rsp]
	addss	xmm3, xmm1
	mulss	xmm2, xmm7
	movaps	xmm1, xmm9
	mulss	xmm1, xmm12
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+20], xmm3
	movss	xmm0, DWORD PTR zw$1$[rsp]
	mulss	xmm0, xmm15
	addss	xmm2, xmm1
	movss	xmm1, DWORD PTR tv1085[rsp]
	movaps	xmm3, xmm1
	mulss	xmm3, xmm7
	movss	xmm7, DWORD PTR xw$1$[rsp]
	mulss	xmm10, xmm7
	addss	xmm3, xmm0
	mulss	xmm4, xmm7
	movaps	xmm0, xmm11
	movss	DWORD PTR [rcx+36], xmm2
	movss	xmm2, DWORD PTR tv1087[rsp]
	mulss	xmm0, xmm12
	movss	xmm12, DWORD PTR xz$1$[rsp]
	mulss	xmm8, xmm12
	addss	xmm3, xmm0
	movaps	xmm0, xmm12
	mulss	xmm0, xmm6
	addss	xmm8, xmm4
	movss	DWORD PTR [rcx+52], xmm3
	addss	xmm10, xmm0
	movss	xmm3, DWORD PTR __real@3f800000$1$[rsp]
	mulss	xmm5, xmm3
	mulss	xmm13, xmm3
	addss	xmm8, xmm5
	addss	xmm10, xmm13
; Line 277
	movss	DWORD PTR [rcx+8], xmm8
	movss	DWORD PTR [rcx+24], xmm10
; Line 278
	movaps	xmm6, XMMWORD PTR [rax-24]
	lea	r11, QWORD PTR [rax]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm0, xmm12
	movaps	xmm10, XMMWORD PTR [r11-88]
	movaps	xmm13, XMMWORD PTR [rsp+48]
	mulss	xmm12, xmm15
	movaps	xmm15, XMMWORD PTR [rsp+16]
	mulss	xmm2, xmm7
	mulss	xmm1, xmm7
	movaps	xmm7, XMMWORD PTR [r11-40]
	mulss	xmm0, xmm14
	movaps	xmm14, XMMWORD PTR [rsp+32]
	addss	xmm12, xmm1
	mulss	xmm11, xmm3
	mulss	xmm9, xmm3
	addss	xmm2, xmm0
	addss	xmm12, xmm11
	movaps	xmm11, XMMWORD PTR [r11-104]
	addss	xmm2, xmm9
	movaps	xmm9, XMMWORD PTR [r11-72]
	movss	DWORD PTR [rcx+56], xmm12
	movaps	xmm12, XMMWORD PTR [r11-120]
	movss	DWORD PTR [rcx+40], xmm2
	mov	rsp, r11
	ret	0
?preRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::preRotQuat32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?makeRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
dst_matrix_addr$ = 128
quaternion_addr$ = 136
?makeRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::makeRotQuat32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 241
$LN4:
	mov	r11, rsp
	sub	rsp, 120				; 00000078H
; Line 246
	movss	xmm0, DWORD PTR [rdx+8]
	xor	eax, eax
	movss	xmm1, DWORD PTR [rdx+4]
	movaps	xmm5, xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	addss	xmm5, xmm0
	movaps	XMMWORD PTR [rsp+96], xmm6
	movaps	xmm6, xmm1
	movaps	XMMWORD PTR [rsp+80], xmm7
	movss	xmm7, DWORD PTR [rdx+12]
	movaps	XMMWORD PTR [r11-56], xmm8
	movaps	xmm4, xmm7
	movss	xmm8, DWORD PTR [rdx]
	movaps	xmm2, xmm7
	movaps	XMMWORD PTR [r11-72], xmm9
	movaps	XMMWORD PTR [r11-88], xmm10
	movaps	xmm10, xmm8
	movaps	XMMWORD PTR [r11-104], xmm11
	addss	xmm10, xmm8
	movaps	XMMWORD PTR [rsp], xmm12
	movaps	xmm11, xmm0
	movaps	xmm12, xmm1
	mulss	xmm2, xmm5
	mov	QWORD PTR [rcx+48], rax
	addss	xmm12, xmm1
	mulss	xmm5, xmm0
	mov	DWORD PTR [rcx+56], eax
	mulss	xmm6, xmm10
	mov	DWORD PTR [rcx+12], eax
	mulss	xmm11, xmm10
	mov	DWORD PTR [rcx+28], eax
	movaps	xmm9, xmm12
	mulss	xmm7, xmm10
	mov	DWORD PTR [rcx+44], eax
	mulss	xmm9, xmm0
	movaps	xmm0, xmm3
	mov	DWORD PTR [rcx+60], 1065353216		; 3f800000H
	mulss	xmm4, xmm12
	mulss	xmm12, xmm1
	mulss	xmm10, xmm8
	movaps	xmm1, xmm4
; Line 247
	movaps	xmm8, XMMWORD PTR [r11-56]
	addss	xmm1, xmm11
	subss	xmm0, xmm12
	subss	xmm3, xmm10
	movaps	xmm10, XMMWORD PTR [r11-88]
	subss	xmm11, xmm4
	movss	DWORD PTR [rcx+32], xmm1
	movaps	xmm1, xmm9
	subss	xmm0, xmm5
	subss	xmm1, xmm7
	addss	xmm7, xmm9
	movss	DWORD PTR [rcx+8], xmm11
	movaps	xmm9, XMMWORD PTR [r11-72]
	movaps	xmm11, XMMWORD PTR [r11-104]
	movss	DWORD PTR [rcx], xmm0
	movaps	xmm0, xmm6
	subss	xmm0, xmm2
	movss	DWORD PTR [rcx+36], xmm1
	addss	xmm2, xmm6
	movss	DWORD PTR [rcx+24], xmm7
	movaps	xmm6, XMMWORD PTR [rsp+96]
	movaps	xmm7, XMMWORD PTR [rsp+80]
	movss	DWORD PTR [rcx+16], xmm0
	movaps	xmm0, xmm3
	subss	xmm3, xmm12
	movss	DWORD PTR [rcx+4], xmm2
	movaps	xmm12, XMMWORD PTR [rsp]
	subss	xmm0, xmm5
	movss	DWORD PTR [rcx+40], xmm3
	movss	DWORD PTR [rcx+20], xmm0
	add	rsp, 120				; 00000078H
	ret	0
?makeRotQuat32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::makeRotQuat32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?postTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z
_TEXT	SEGMENT
tv1224 = 0
tv1195 = 4
tv1227 = 8
tv1228 = 12
tv1187 = 16
src_matrix_addr_float$15$ = 32
src_matrix_addr_float$13$ = 48
src_matrix_addr_float$14$ = 64
tv1244 = 80
tv1252 = 96
tv1259 = 288
dst_matrix_addr$ = 288
tv1263 = 296
vector_addr$ = 296
value$ = 304
tv1225 = 312
?postTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z PROC	; XGK::DATA::MAT4::postTransValue32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 228
$LN4:
	mov	rax, rsp
	sub	rsp, 280				; 00000118H
; Line 234
	movaps	xmm0, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB
	movaps	xmm1, xmm2
	mulss	xmm1, DWORD PTR [rdx+8]
; Line 236
	movss	xmm4, DWORD PTR [rcx]
	movss	xmm5, DWORD PTR [rcx+32]
	movaps	XMMWORD PTR src_matrix_addr_float$13$[rsp], xmm0
	movaps	xmm0, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+32
	movaps	XMMWORD PTR src_matrix_addr_float$15$[rsp], xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [rdx]
	movaps	XMMWORD PTR [rax-24], xmm6
	movss	xmm6, DWORD PTR [rcx+48]
	movss	DWORD PTR tv1259[rsp], xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [rdx+4]
	xorps	xmm2, xmm2
	movaps	XMMWORD PTR [rax-40], xmm7
	movaps	XMMWORD PTR [rax-56], xmm8
	movaps	XMMWORD PTR [rax-72], xmm9
	movaps	XMMWORD PTR [rax-88], xmm10
	movaps	XMMWORD PTR [rax-104], xmm11
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	XMMWORD PTR [rax-136], xmm13
	movaps	XMMWORD PTR [rax-152], xmm14
	movaps	XMMWORD PTR [rsp+112], xmm15
	movaps	xmm12, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+16
	movss	xmm7, DWORD PTR [rcx+16]
	movaps	xmm15, xmm12
	movss	xmm10, DWORD PTR [rcx+4]
	movaps	xmm3, xmm7
	movss	xmm8, DWORD PTR [rcx+20]
	movaps	xmm14, xmm12
	movss	xmm9, DWORD PTR [rcx+36]
	movss	xmm11, DWORD PTR [rcx+52]
	movss	DWORD PTR tv1263[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR tv1224[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+24]
	movss	DWORD PTR tv1225[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+28]
	mulss	xmm3, xmm2
	movss	DWORD PTR tv1227[rsp], xmm0
	movaps	xmm0, xmm5
	mulss	xmm0, xmm2
	movss	DWORD PTR value$[rsp], xmm1
	addss	xmm3, xmm4
	movss	xmm1, DWORD PTR [rcx+40]
	movss	DWORD PTR tv1195[rsp], xmm1
	movss	xmm1, DWORD PTR [rcx+12]
	movss	DWORD PTR tv1228[rsp], xmm1
	movss	xmm1, DWORD PTR [rcx+44]
	addss	xmm3, xmm0
	movss	DWORD PTR tv1187[rsp], xmm1
	movaps	xmm0, xmm4
	mulss	xmm0, xmm12
	movaps	xmm1, xmm6
	mulss	xmm1, xmm2
	movaps	xmm2, xmm7
	shufps	xmm15, xmm12, 170			; 000000aaH
	shufps	xmm14, xmm12, 255			; 000000ffH
	addss	xmm3, xmm1
	movaps	XMMWORD PTR src_matrix_addr_float$14$[rsp], xmm12
	movaps	xmm1, xmm7
	movss	DWORD PTR [rcx], xmm3
	movaps	xmm3, xmm12
	shufps	xmm3, xmm12, 85				; 00000055H
	mulss	xmm2, xmm3
	movaps	XMMWORD PTR tv1252[rsp], xmm3
	addss	xmm2, xmm0
	movaps	xmm0, xmm15
	mulss	xmm0, xmm5
	addss	xmm2, xmm0
	movaps	xmm0, xmm14
	mulss	xmm0, xmm6
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+16], xmm2
	movaps	xmm2, XMMWORD PTR src_matrix_addr_float$15$[rsp]
	movaps	xmm0, xmm2
	shufps	xmm0, xmm2, 85				; 00000055H
	movaps	XMMWORD PTR tv1244[rsp], xmm0
	mulss	xmm1, xmm0
	mulss	xmm7, DWORD PTR tv1263[rsp]
	movaps	xmm13, xmm2
	shufps	xmm13, xmm2, 170			; 000000aaH
	movaps	xmm12, xmm2
	shufps	xmm12, xmm2, 255			; 000000ffH
	movaps	xmm0, xmm4
	mulss	xmm0, xmm2
	movaps	xmm2, XMMWORD PTR src_matrix_addr_float$13$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm13
	mulss	xmm0, xmm5
	addss	xmm1, xmm0
	movaps	xmm0, xmm12
	mulss	xmm0, xmm6
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv1259[rsp]
	mulss	xmm0, xmm4
	movaps	xmm4, xmm2
	shufps	xmm4, xmm2, 255				; 000000ffH
	addss	xmm7, xmm0
	movss	DWORD PTR [rcx+32], xmm1
	movss	xmm1, DWORD PTR value$[rsp]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm10
	mulss	xmm1, xmm5
	movaps	xmm5, xmm2
	shufps	xmm5, xmm2, 170				; 000000aaH
	addss	xmm7, xmm1
	addss	xmm7, xmm6
	movaps	xmm6, xmm2
	shufps	xmm6, xmm2, 85				; 00000055H
	movss	xmm2, DWORD PTR src_matrix_addr_float$14$[rsp]
	movaps	xmm1, xmm6
	mulss	xmm1, xmm8
	mulss	xmm2, xmm10
	addss	xmm1, xmm0
	movss	DWORD PTR [rcx+48], xmm7
	movaps	xmm7, XMMWORD PTR tv1244[rsp]
	movaps	xmm0, xmm5
	mulss	xmm0, xmm9
	addss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm11
	addss	xmm1, xmm0
	movaps	xmm0, xmm3
	movss	xmm3, DWORD PTR src_matrix_addr_float$15$[rsp]
	mulss	xmm0, xmm8
	mulss	xmm3, xmm10
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+4], xmm1
	movaps	xmm1, xmm15
	movaps	xmm0, xmm14
	mulss	xmm0, xmm11
	mulss	xmm1, xmm9
	addss	xmm2, xmm1
	movaps	xmm1, xmm13
	mulss	xmm1, xmm9
	addss	xmm2, xmm0
	movaps	xmm0, xmm8
	mulss	xmm0, xmm7
	addss	xmm3, xmm0
	movss	DWORD PTR [rcx+20], xmm2
	movss	xmm2, DWORD PTR tv1263[rsp]
	movaps	xmm0, xmm12
	mulss	xmm0, xmm11
	mulss	xmm2, xmm8
	addss	xmm3, xmm1
	movss	xmm1, DWORD PTR value$[rsp]
	mulss	xmm1, xmm9
	movss	xmm9, DWORD PTR tv1225[rsp]
	addss	xmm3, xmm0
	movss	xmm0, DWORD PTR tv1259[rsp]
	mulss	xmm0, xmm10
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+36], xmm3
	movaps	xmm0, XMMWORD PTR src_matrix_addr_float$13$[rsp]
	movaps	xmm3, xmm6
	mulss	xmm3, xmm9
	addss	xmm2, xmm1
	addss	xmm2, xmm11
	movss	DWORD PTR [rcx+52], xmm2
	movss	xmm10, DWORD PTR tv1224[rsp]
	movaps	xmm1, xmm5
	movss	xmm11, DWORD PTR tv1195[rsp]
	movaps	xmm8, XMMWORD PTR tv1252[rsp]
	movss	xmm2, DWORD PTR src_matrix_addr_float$14$[rsp]
	mulss	xmm0, xmm10
	mulss	xmm2, xmm10
	addss	xmm3, xmm0
	mulss	xmm1, xmm11
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [rcx+56]
	addss	xmm3, xmm1
	movaps	xmm1, xmm15
	mulss	xmm1, xmm11
	addss	xmm3, xmm0
	movaps	xmm0, xmm8
	mulss	xmm0, xmm9
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+8], xmm3
	movss	xmm3, DWORD PTR src_matrix_addr_float$15$[rsp]
	movaps	xmm0, xmm14
	mulss	xmm0, DWORD PTR [rcx+56]
	mulss	xmm3, xmm10
	addss	xmm2, xmm1
	movaps	xmm1, xmm13
	mulss	xmm1, xmm11
	addss	xmm2, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, xmm9
	addss	xmm3, xmm0
	movss	DWORD PTR [rcx+24], xmm2
	movss	xmm2, DWORD PTR tv1259[rsp]
	movaps	xmm0, xmm12
	mulss	xmm0, DWORD PTR [rcx+56]
	mulss	xmm2, xmm10
	movss	xmm10, DWORD PTR tv1263[rsp]
	addss	xmm3, xmm1
	addss	xmm3, xmm0
	movaps	xmm0, xmm10
	mulss	xmm0, xmm9
	movss	xmm9, DWORD PTR value$[rsp]
	movaps	xmm1, xmm9
	addss	xmm2, xmm0
	mulss	xmm1, xmm11
	movss	xmm0, DWORD PTR tv1227[rsp]
	mulss	xmm6, xmm0
	addss	xmm2, xmm1
	mulss	xmm7, xmm0
	movss	xmm1, DWORD PTR tv1228[rsp]
	movss	DWORD PTR [rcx+40], xmm3
	movss	xmm3, DWORD PTR [rcx+60]
	addss	xmm2, DWORD PTR [rcx+56]
	mulss	xmm4, xmm3
	mulss	xmm8, xmm0
	movss	DWORD PTR [rcx+56], xmm2
	movaps	xmm2, XMMWORD PTR src_matrix_addr_float$13$[rsp]
	mulss	xmm2, xmm1
	mulss	xmm14, xmm3
	addss	xmm6, xmm2
	mulss	xmm12, xmm3
	movss	xmm2, DWORD PTR tv1187[rsp]
	mulss	xmm5, xmm2
	mulss	xmm15, xmm2
	addss	xmm6, xmm5
	mulss	xmm13, xmm2
	addss	xmm6, xmm4
	movaps	xmm4, XMMWORD PTR src_matrix_addr_float$14$[rsp]
	mulss	xmm4, xmm1
	addss	xmm4, xmm8
	movss	DWORD PTR [rcx+12], xmm6
	addss	xmm4, xmm15
	addss	xmm4, xmm14
	movss	DWORD PTR [rcx+28], xmm4
	movaps	xmm4, XMMWORD PTR src_matrix_addr_float$15$[rsp]
	mulss	xmm4, xmm1
	addss	xmm7, xmm4
	movss	xmm4, DWORD PTR tv1259[rsp]
	mulss	xmm4, xmm1
	addss	xmm7, xmm13
	addss	xmm7, xmm12
	movss	DWORD PTR [rcx+44], xmm7
; Line 237
	movaps	xmm6, XMMWORD PTR [rax-24]
	lea	r11, QWORD PTR [rax]
	movaps	xmm7, XMMWORD PTR [r11-40]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm11, XMMWORD PTR [r11-104]
	movaps	xmm12, XMMWORD PTR [r11-120]
	movaps	xmm13, XMMWORD PTR [r11-136]
	movaps	xmm14, XMMWORD PTR [r11-152]
	movaps	xmm15, XMMWORD PTR [rsp+112]
	mulss	xmm10, xmm0
	mulss	xmm9, xmm2
	addss	xmm4, xmm10
	movaps	xmm10, XMMWORD PTR [r11-88]
	addss	xmm4, xmm9
	movaps	xmm9, XMMWORD PTR [r11-72]
	addss	xmm4, xmm3
	movss	DWORD PTR [rcx+60], xmm4
	mov	rsp, r11
	ret	0
?postTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z ENDP	; XGK::DATA::MAT4::postTransValue32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?preTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z
_TEXT	SEGMENT
tv1172 = 0
tv1213 = 4
tv1261 = 8
src_matrix_addr_float$13$ = 16
src_matrix_addr_float$15$ = 32
src_matrix_addr_float$14$ = 48
tv1255 = 240
dst_matrix_addr$ = 240
tv1249 = 248
vector_addr$ = 248
value$ = 256
tv1247 = 264
?preTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z PROC	; XGK::DATA::MAT4::preTransValue32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 215
$LN4:
	mov	rax, rsp
	sub	rsp, 232				; 000000e8H
; Line 221
	movaps	xmm1, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB
	movaps	xmm4, xmm2
	mulss	xmm4, DWORD PTR [rdx]
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [rdx+8]
; Line 223
	movss	xmm5, DWORD PTR [rcx+48]
	movaps	XMMWORD PTR src_matrix_addr_float$13$[rsp], xmm1
	movaps	xmm1, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+16
	movss	DWORD PTR value$[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+16]
	movss	DWORD PTR tv1255[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+32]
	movss	DWORD PTR tv1249[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+52]
	movss	DWORD PTR tv1247[rsp], xmm0
	movaps	XMMWORD PTR [rax-24], xmm6
	movaps	XMMWORD PTR [rax-40], xmm7
	movaps	XMMWORD PTR [rax-56], xmm8
	movaps	XMMWORD PTR [rax-72], xmm9
	movaps	XMMWORD PTR [rax-88], xmm10
	movaps	XMMWORD PTR [rax-104], xmm11
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	XMMWORD PTR [rsp+96], xmm13
	movaps	XMMWORD PTR [rsp+80], xmm14
	movaps	XMMWORD PTR [rsp+64], xmm15
	movaps	xmm7, xmm2
	movss	xmm6, DWORD PTR [rcx]
	mulss	xmm7, DWORD PTR [rdx+4]
	movss	xmm0, DWORD PTR [rcx+56]
	movss	xmm8, DWORD PTR [rcx+4]
	movss	xmm10, DWORD PTR [rcx+8]
	movaps	xmm2, xmm8
	movss	xmm9, DWORD PTR [rcx+12]
	movss	xmm11, DWORD PTR [rcx+20]
	movss	xmm13, DWORD PTR [rcx+24]
	movaps	xmm3, xmm11
	movss	xmm12, DWORD PTR [rcx+28]
	movss	xmm15, DWORD PTR [rcx+36]
	movss	xmm14, DWORD PTR [rcx+40]
	movss	DWORD PTR tv1172[rsp], xmm0
	movaps	xmm0, xmm10
	movaps	XMMWORD PTR src_matrix_addr_float$14$[rsp], xmm1
	movaps	xmm1, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+32
	movaps	XMMWORD PTR src_matrix_addr_float$15$[rsp], xmm1
	xorps	xmm1, xmm1
	mulss	xmm0, xmm1
	mulss	xmm2, xmm1
	movaps	xmm1, xmm13
	mulss	xmm1, DWORD PTR src_matrix_addr_float$15$[rsp]
	addss	xmm2, xmm6
	movss	DWORD PTR tv1261[rsp], xmm6
	movss	DWORD PTR tv1213[rsp], xmm5
	addss	xmm2, xmm0
	movaps	xmm0, xmm9
	mulss	xmm0, xmm4
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1255[rsp]
	mulss	xmm0, DWORD PTR src_matrix_addr_float$13$[rsp]
	movss	DWORD PTR [rcx], xmm2
	movaps	xmm2, XMMWORD PTR src_matrix_addr_float$14$[rsp]
	mulss	xmm3, xmm2
	mulss	xmm2, xmm15
	addss	xmm3, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm12
	addss	xmm3, xmm1
	movss	xmm1, DWORD PTR src_matrix_addr_float$15$[rsp]
	mulss	xmm1, xmm14
	addss	xmm3, xmm0
	movss	xmm0, DWORD PTR src_matrix_addr_float$13$[rsp]
	mulss	xmm0, DWORD PTR tv1249[rsp]
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+16], xmm3
	movss	xmm3, DWORD PTR src_matrix_addr_float$14$[rsp]
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [rcx+44]
	mulss	xmm3, DWORD PTR tv1247[rsp]
	addss	xmm2, xmm1
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR src_matrix_addr_float$13$[rsp]
	movss	DWORD PTR [rcx+32], xmm2
	mulss	xmm4, DWORD PTR [rcx+60]
	movaps	xmm2, xmm8
	movss	xmm1, DWORD PTR src_matrix_addr_float$15$[rsp]
	mulss	xmm1, DWORD PTR tv1172[rsp]
	mulss	xmm0, xmm5
	movss	xmm5, DWORD PTR src_matrix_addr_float$14$[rsp+4]
	mulss	xmm2, xmm5
	addss	xmm3, xmm0
	movaps	xmm0, xmm6
	movss	xmm6, DWORD PTR src_matrix_addr_float$13$[rsp+4]
	mulss	xmm0, xmm6
	addss	xmm3, xmm1
	movaps	xmm1, xmm10
	addss	xmm2, xmm0
	movaps	xmm0, xmm9
	mulss	xmm0, xmm7
	addss	xmm3, xmm4
	movss	xmm4, DWORD PTR src_matrix_addr_float$15$[rsp+4]
	mulss	xmm1, xmm4
	addss	xmm2, xmm1
	movss	DWORD PTR [rcx+48], xmm3
	movaps	xmm3, xmm5
	movaps	xmm1, xmm13
	mulss	xmm1, xmm4
	mulss	xmm3, xmm15
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1255[rsp]
	mulss	xmm0, xmm6
	movss	DWORD PTR [rcx+4], xmm2
	movaps	xmm2, xmm11
	mulss	xmm2, xmm5
	mulss	xmm5, DWORD PTR tv1247[rsp]
	addss	xmm2, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, xmm12
	addss	xmm2, xmm1
	movaps	xmm1, xmm4
	mulss	xmm4, DWORD PTR tv1172[rsp]
	mulss	xmm1, xmm14
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1249[rsp]
	mulss	xmm0, xmm6
	mulss	xmm6, DWORD PTR tv1213[rsp]
	addss	xmm3, xmm0
	movss	DWORD PTR [rcx+20], xmm2
	movaps	xmm0, xmm7
	movaps	xmm2, xmm8
	mulss	xmm0, DWORD PTR [rcx+44]
	addss	xmm6, xmm5
	mulss	xmm7, DWORD PTR [rcx+60]
	movss	xmm5, DWORD PTR src_matrix_addr_float$14$[rsp+8]
	addss	xmm3, xmm1
	mulss	xmm2, xmm5
	addss	xmm6, xmm4
	movss	xmm4, DWORD PTR src_matrix_addr_float$15$[rsp+8]
	movaps	xmm1, xmm10
	mulss	xmm1, xmm4
	addss	xmm3, xmm0
	addss	xmm6, xmm7
	movss	xmm7, DWORD PTR tv1261[rsp]
	movaps	xmm0, xmm7
	movss	DWORD PTR [rcx+36], xmm3
	movss	xmm3, DWORD PTR value$[rsp]
	movss	DWORD PTR [rcx+52], xmm6
	movss	xmm6, DWORD PTR src_matrix_addr_float$13$[rsp+8]
	mulss	xmm0, xmm6
	addss	xmm2, xmm0
	movaps	xmm0, xmm9
	mulss	xmm0, xmm3
	addss	xmm2, xmm1
	movaps	xmm1, xmm13
	mulss	xmm1, xmm4
	addss	xmm2, xmm0
	movaps	xmm0, xmm11
	mulss	xmm0, xmm5
	movss	DWORD PTR [rcx+8], xmm2
	movss	xmm2, DWORD PTR tv1255[rsp]
	mulss	xmm2, xmm6
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	addss	xmm2, xmm1
	movss	xmm3, DWORD PTR tv1249[rsp]
; Line 224
	lea	r11, QWORD PTR [rax]
	mulss	xmm0, xmm12
	movaps	xmm1, xmm4
	mulss	xmm4, DWORD PTR tv1172[rsp]
	addss	xmm2, xmm0
	mulss	xmm3, xmm6
	mulss	xmm6, DWORD PTR tv1213[rsp]
	movaps	xmm0, xmm15
	mulss	xmm0, xmm5
	movss	DWORD PTR [rcx+24], xmm2
	movss	xmm2, DWORD PTR value$[rsp]
	addss	xmm3, xmm0
	mulss	xmm1, xmm14
	movaps	xmm0, xmm2
	mulss	xmm2, DWORD PTR [rcx+60]
	mulss	xmm0, DWORD PTR [rcx+44]
	addss	xmm3, xmm1
	addss	xmm3, xmm0
	movss	xmm0, DWORD PTR tv1247[rsp]
	mulss	xmm0, xmm5
	addss	xmm6, xmm0
	movss	DWORD PTR [rcx+40], xmm3
	movaps	xmm0, XMMWORD PTR src_matrix_addr_float$13$[rsp]
	shufps	xmm0, xmm0, 255				; 000000ffH
	mulss	xmm7, xmm0
	movaps	XMMWORD PTR src_matrix_addr_float$13$[rsp], xmm0
	addss	xmm6, xmm4
	movss	xmm0, DWORD PTR tv1255[rsp]
	addss	xmm6, xmm2
	movss	xmm2, DWORD PTR tv1249[rsp]
	movss	DWORD PTR [rcx+56], xmm6
	movss	xmm6, DWORD PTR src_matrix_addr_float$14$[rsp+12]
	mulss	xmm8, xmm6
	mulss	xmm11, xmm6
	addss	xmm7, xmm8
	mulss	xmm15, xmm6
	movss	xmm8, DWORD PTR src_matrix_addr_float$15$[rsp+12]
	mulss	xmm10, xmm8
	mulss	xmm13, xmm8
	addss	xmm7, xmm10
	movaps	xmm10, XMMWORD PTR [r11-88]
	addss	xmm7, xmm9
	movaps	xmm9, XMMWORD PTR [r11-72]
	movss	DWORD PTR [rcx+12], xmm7
	movaps	xmm7, XMMWORD PTR src_matrix_addr_float$13$[rsp]
	mulss	xmm0, xmm7
	mulss	xmm2, xmm7
	mulss	xmm7, DWORD PTR tv1213[rsp]
	addss	xmm0, xmm11
	movaps	xmm11, XMMWORD PTR [r11-104]
	addss	xmm2, xmm15
	movaps	xmm15, XMMWORD PTR [rsp+64]
	addss	xmm0, xmm13
	movaps	xmm13, XMMWORD PTR [rsp+96]
	addss	xmm0, xmm12
	movaps	xmm12, XMMWORD PTR [r11-120]
	movss	DWORD PTR [rcx+28], xmm0
	movaps	xmm0, xmm8
	mulss	xmm8, DWORD PTR tv1172[rsp]
	mulss	xmm0, xmm14
	movaps	xmm14, XMMWORD PTR [rsp+80]
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1247[rsp]
	mulss	xmm0, xmm6
	movaps	xmm6, XMMWORD PTR [r11-24]
	addss	xmm2, DWORD PTR [rcx+44]
	addss	xmm7, xmm0
	movss	DWORD PTR [rcx+44], xmm2
	addss	xmm7, xmm8
	movaps	xmm8, XMMWORD PTR [r11-56]
	addss	xmm7, DWORD PTR [rcx+60]
	movss	DWORD PTR [rcx+60], xmm7
	movaps	xmm7, XMMWORD PTR [r11-40]
	mov	rsp, r11
	ret	0
?preTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z ENDP	; XGK::DATA::MAT4::preTransValue32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?makeTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z
_TEXT	SEGMENT
dst_matrix_addr$ = 8
vector_addr$ = 16
value$ = 24
?makeTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z PROC	; XGK::DATA::MAT4::makeTransValue32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 210
	movaps	xmm0, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB
	movups	XMMWORD PTR [rcx], xmm0
	movaps	xmm1, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+16
	movups	XMMWORD PTR [rcx+16], xmm1
	movaps	xmm0, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+32
	movaps	xmm1, xmm2
	movups	XMMWORD PTR [rcx+32], xmm0
	mulss	xmm1, DWORD PTR [rdx]
	movaps	xmm0, xmm2
	movss	DWORD PTR [rcx+48], xmm1
	mulss	xmm0, DWORD PTR [rdx+4]
	movss	DWORD PTR [rcx+52], xmm0
	mulss	xmm2, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+60], 1065353216		; 3f800000H
	movss	DWORD PTR [rcx+56], xmm2
; Line 211
	ret	0
?makeTransValue32@MAT4@DATA@XGK@@YAXPEAX0M@Z ENDP	; XGK::DATA::MAT4::makeTransValue32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?postTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
dst_matrix_addr$ = 8
vector_addr$ = 16
?postTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::postTrans32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 198
	movss	xmm2, DWORD PTR [rcx+16]
	mulss	xmm2, DWORD PTR [rdx+4]
	movss	xmm0, DWORD PTR [rcx]
	mulss	xmm0, DWORD PTR [rdx]
	movss	xmm1, DWORD PTR [rcx+32]
	mulss	xmm1, DWORD PTR [rdx+8]
; Line 199
	movss	xmm3, DWORD PTR [rcx+4]
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR [rcx+20]
	addss	xmm2, xmm1
	movss	xmm1, DWORD PTR [rcx+36]
	addss	xmm2, DWORD PTR [rcx+48]
	movss	DWORD PTR [rcx+48], xmm2
	mulss	xmm3, DWORD PTR [rdx]
	mulss	xmm0, DWORD PTR [rdx+4]
	mulss	xmm1, DWORD PTR [rdx+8]
; Line 200
	movss	xmm2, DWORD PTR [rcx+8]
	addss	xmm3, xmm0
	movss	xmm0, DWORD PTR [rcx+24]
	addss	xmm3, xmm1
	movss	xmm1, DWORD PTR [rcx+40]
	addss	xmm3, DWORD PTR [rcx+52]
	movss	DWORD PTR [rcx+52], xmm3
	mulss	xmm2, DWORD PTR [rdx]
	mulss	xmm0, DWORD PTR [rdx+4]
	mulss	xmm1, DWORD PTR [rdx+8]
	addss	xmm2, xmm0
	addss	xmm2, xmm1
	addss	xmm2, DWORD PTR [rcx+56]
	movss	DWORD PTR [rcx+56], xmm2
; Line 201
	ret	0
?postTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::postTrans32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?preTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
dst_matrix_addr$ = 8
vector_addr$ = 16
?preTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::preTrans32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 186
	movss	xmm0, DWORD PTR [rcx+48]
	addss	xmm0, DWORD PTR [rdx]
	movss	DWORD PTR [rcx+48], xmm0
; Line 187
	movss	xmm1, DWORD PTR [rdx+4]
	addss	xmm1, DWORD PTR [rcx+52]
	movss	DWORD PTR [rcx+52], xmm1
; Line 188
	movss	xmm0, DWORD PTR [rdx+8]
	addss	xmm0, DWORD PTR [rcx+56]
	movss	DWORD PTR [rcx+56], xmm0
; Line 189
	ret	0
?preTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::preTrans32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?makeTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
dst_matrix_addr$ = 8
vector_addr$ = 16
?makeTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::makeTrans32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 176
	movaps	xmm0, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB
	movups	XMMWORD PTR [rcx], xmm0
	movaps	xmm1, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+16
	movups	XMMWORD PTR [rcx+16], xmm1
	movaps	xmm0, XMMWORD PTR ?IDENT@MAT4@DATA@XGK@@3QBMB+32
	movups	XMMWORD PTR [rcx+32], xmm0
	movsd	xmm0, QWORD PTR [rdx]
	movsd	QWORD PTR [rcx+48], xmm0
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+56], eax
; Line 177
	ret	0
?makeTrans32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::makeTrans32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?postmul32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
tv1261 = 0
tv1272 = 4
tv1262 = 8
tv1271 = 12
tv1294 = 16
tv1299 = 20
tv1280 = 24
tv1270 = 28
tv1263 = 32
tv1320 = 36
tv1267 = 40
e11$1$ = 44
tv1264 = 224
dst_matrix_addr$ = 224
tv1268 = 232
src_matrix_addr$ = 232
tv1265 = 240
tv1266 = 248
?postmul32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::postmul32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 162
$LN4:
	mov	rax, rsp
	sub	rsp, 216				; 000000d8H
; Line 167
	movss	xmm1, DWORD PTR [rcx+12]
	movss	xmm0, DWORD PTR [rdx+4]
	movaps	xmm3, xmm1
	movss	xmm2, DWORD PTR [rdx+44]
	movss	xmm4, DWORD PTR [rdx+56]
	movss	xmm5, DWORD PTR [rdx+60]
	movss	DWORD PTR tv1268[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx]
	movss	DWORD PTR tv1264[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+8]
	movss	DWORD PTR tv1265[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+12]
	movss	DWORD PTR tv1266[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+24]
	movss	DWORD PTR tv1299[rsp], xmm0
	movaps	XMMWORD PTR [rax-24], xmm6
	movaps	XMMWORD PTR [rax-40], xmm7
	movaps	XMMWORD PTR [rax-56], xmm8
	movaps	XMMWORD PTR [rax-72], xmm9
	movaps	XMMWORD PTR [rax-88], xmm10
	movaps	XMMWORD PTR [rax-104], xmm11
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	XMMWORD PTR [rsp+80], xmm13
	movaps	XMMWORD PTR [rsp+64], xmm14
	movaps	XMMWORD PTR [rsp+48], xmm15
	movss	xmm0, DWORD PTR [rdx+20]
	movss	xmm14, DWORD PTR [rdx+36]
	movss	xmm15, DWORD PTR [rdx+40]
	movss	xmm12, DWORD PTR [rcx+20]
	movss	xmm10, DWORD PTR [rcx+4]
	movss	xmm11, DWORD PTR [rcx+16]
	movss	xmm7, DWORD PTR [rcx]
	movss	xmm8, DWORD PTR [rcx+32]
	movaps	xmm6, xmm7
	movss	xmm9, DWORD PTR [rcx+48]
	movss	xmm13, DWORD PTR [rcx+8]
	movss	DWORD PTR tv1261[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+16]
	movss	DWORD PTR tv1262[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+24]
	movss	DWORD PTR tv1272[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+28]
	movss	DWORD PTR tv1271[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+32]
	mulss	xmm3, xmm0
	movss	DWORD PTR tv1294[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+28]
	mulss	xmm0, xmm14
	movss	DWORD PTR tv1280[rsp], xmm1
	movss	xmm1, DWORD PTR [rcx+44]
	addss	xmm3, xmm0
	mulss	xmm1, xmm15
	movss	xmm0, DWORD PTR [rcx+60]
	mulss	xmm0, xmm2
	addss	xmm3, xmm1
	movss	DWORD PTR tv1263[rsp], xmm10
	movaps	xmm1, xmm4
	movss	DWORD PTR tv1270[rsp], xmm2
	movss	xmm2, DWORD PTR [rdx+48]
	mulss	xmm6, xmm2
	addss	xmm3, xmm0
	mulss	xmm1, xmm8
	movaps	xmm0, xmm11
	mulss	xmm10, xmm2
	movss	DWORD PTR tv1320[rsp], xmm12
	movss	DWORD PTR e11$1$[rsp], xmm3
	movss	xmm3, DWORD PTR [rdx+52]
	mulss	xmm0, xmm3
	movss	DWORD PTR tv1267[rsp], xmm13
	addss	xmm6, xmm0
	movaps	xmm0, xmm5
	mulss	xmm0, xmm9
	addss	xmm6, xmm1
	movss	xmm1, DWORD PTR [rcx+36]
	mulss	xmm1, xmm4
	addss	xmm6, xmm0
	movaps	xmm0, xmm12
	mulss	xmm0, xmm3
	addss	xmm10, xmm0
	movss	xmm0, DWORD PTR [rcx+52]
	addss	xmm10, xmm1
	movss	xmm1, DWORD PTR [rcx+40]
	movaps	xmm12, xmm13
	movss	xmm13, DWORD PTR tv1280[rsp]
	mulss	xmm0, xmm5
	mulss	xmm12, xmm2
	addss	xmm10, xmm0
	mulss	xmm13, xmm2
	movss	xmm0, DWORD PTR tv1299[rsp]
	movaps	xmm2, xmm7
	mulss	xmm2, DWORD PTR tv1264[rsp]
	mulss	xmm0, xmm3
	mulss	xmm1, xmm4
	addss	xmm12, xmm0
	movss	DWORD PTR [rcx+48], xmm6
	movss	xmm0, DWORD PTR [rcx+56]
	movss	xmm6, DWORD PTR [rcx+36]
	mulss	xmm0, xmm5
	addss	xmm12, xmm1
	movss	xmm1, DWORD PTR [rcx+44]
	mulss	xmm1, xmm4
	movss	xmm4, DWORD PTR tv1263[rsp]
	addss	xmm12, xmm0
	movss	xmm0, DWORD PTR [rcx+28]
	mulss	xmm0, xmm3
	movaps	xmm3, xmm7
	mulss	xmm3, DWORD PTR tv1262[rsp]
	addss	xmm13, xmm0
	movss	xmm0, DWORD PTR [rcx+60]
	mulss	xmm0, xmm5
	movss	xmm5, DWORD PTR tv1270[rsp]
	addss	xmm13, xmm1
	movss	xmm1, DWORD PTR tv1265[rsp]
	mulss	xmm1, xmm8
	addss	xmm13, xmm0
	movaps	xmm0, xmm11
	mulss	xmm0, DWORD PTR tv1268[rsp]
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1266[rsp]
	mulss	xmm0, xmm9
	addss	xmm2, xmm1
	movss	xmm1, DWORD PTR tv1272[rsp]
	mulss	xmm1, xmm8
	addss	xmm2, xmm0
	movaps	xmm0, xmm11
	mulss	xmm0, DWORD PTR tv1261[rsp]
	mulss	xmm11, xmm14
	addss	xmm3, xmm0
	movss	DWORD PTR [rcx], xmm2
	movss	xmm0, DWORD PTR tv1271[rsp]
	movss	xmm2, DWORD PTR tv1294[rsp]
	mulss	xmm0, xmm9
	addss	xmm3, xmm1
	mulss	xmm2, xmm7
	movss	xmm7, DWORD PTR [rcx+52]
	movaps	xmm1, xmm5
	mulss	xmm1, xmm9
	addss	xmm3, xmm0
	movaps	xmm0, xmm15
	mulss	xmm0, xmm8
	addss	xmm2, xmm11
	movss	xmm8, DWORD PTR tv1320[rsp]
	movss	DWORD PTR [rcx+16], xmm3
	movaps	xmm3, xmm4
	mulss	xmm3, DWORD PTR tv1264[rsp]
	addss	xmm2, xmm0
	movaps	xmm0, xmm8
	mulss	xmm0, DWORD PTR tv1268[rsp]
	addss	xmm2, xmm1
	movaps	xmm1, xmm6
	mulss	xmm1, DWORD PTR tv1265[rsp]
	addss	xmm3, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, DWORD PTR tv1266[rsp]
	movss	DWORD PTR [rcx+32], xmm2
	movaps	xmm2, xmm4
	addss	xmm3, xmm1
	addss	xmm3, xmm0
	movaps	xmm0, xmm8
	movss	DWORD PTR [rcx+4], xmm3
	movss	xmm3, DWORD PTR tv1262[rsp]
	mulss	xmm2, xmm3
	mulss	xmm0, DWORD PTR tv1261[rsp]
	movaps	xmm1, xmm6
	mulss	xmm1, DWORD PTR tv1272[rsp]
	movss	xmm11, DWORD PTR tv1271[rsp]
	addss	xmm2, xmm0
	movss	xmm9, DWORD PTR tv1294[rsp]
	movaps	xmm0, xmm7
	mulss	xmm0, xmm11
	mulss	xmm7, xmm5
	addss	xmm2, xmm1
	mulss	xmm8, xmm14
	movaps	xmm1, xmm9
	mulss	xmm6, xmm15
	mulss	xmm1, xmm4
	movss	xmm4, DWORD PTR tv1267[rsp]
	addss	xmm2, xmm0
	mulss	xmm3, xmm4
	addss	xmm1, xmm8
	mulss	xmm9, xmm4
	movss	xmm8, DWORD PTR [rcx+56]
	movss	DWORD PTR [rcx+20], xmm2
	movaps	xmm2, xmm4
	mulss	xmm2, DWORD PTR tv1264[rsp]
	movss	xmm4, DWORD PTR [rcx+44]
	addss	xmm1, xmm6
	movss	xmm6, DWORD PTR [rcx+40]
	movss	DWORD PTR [rcx+52], xmm10
	movss	DWORD PTR [rcx+56], xmm12
	addss	xmm1, xmm7
	movss	xmm7, DWORD PTR tv1299[rsp]
	movaps	xmm0, xmm7
	mulss	xmm0, DWORD PTR tv1268[rsp]
	movss	DWORD PTR [rcx+36], xmm1
	movaps	xmm1, xmm6
	mulss	xmm1, DWORD PTR tv1265[rsp]
	addss	xmm2, xmm0
	movaps	xmm0, xmm8
	mulss	xmm0, DWORD PTR tv1266[rsp]
	addss	xmm2, xmm1
	movaps	xmm1, xmm6
	mulss	xmm1, DWORD PTR tv1272[rsp]
	mulss	xmm6, xmm15
	addss	xmm2, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, DWORD PTR tv1261[rsp]
	mulss	xmm7, xmm14
	addss	xmm3, xmm0
	movss	DWORD PTR [rcx+8], xmm2
	movaps	xmm0, xmm8
	mulss	xmm8, xmm5
	movss	xmm5, DWORD PTR tv1280[rsp]
	addss	xmm9, xmm7
	mulss	xmm0, xmm11
	movaps	xmm2, xmm5
	mulss	xmm2, DWORD PTR tv1264[rsp]
	addss	xmm3, xmm1
	mulss	xmm5, DWORD PTR tv1262[rsp]
	movaps	xmm1, xmm4
	mulss	xmm1, DWORD PTR tv1265[rsp]
	addss	xmm9, xmm6
	mulss	xmm4, DWORD PTR tv1272[rsp]
	addss	xmm3, xmm0
	addss	xmm9, xmm8
	movss	DWORD PTR [rcx+24], xmm3
	movss	xmm3, DWORD PTR [rcx+28]
	movaps	xmm0, xmm3
	mulss	xmm3, DWORD PTR tv1261[rsp]
	mulss	xmm0, DWORD PTR tv1268[rsp]
	addss	xmm5, xmm3
	movss	DWORD PTR [rcx+40], xmm9
	addss	xmm2, xmm0
	addss	xmm5, xmm4
	addss	xmm2, xmm1
	movss	xmm1, DWORD PTR [rcx+60]
	movaps	xmm0, xmm1
	mulss	xmm1, xmm11
	mulss	xmm0, DWORD PTR tv1266[rsp]
	addss	xmm5, xmm1
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+28], xmm5
	movss	DWORD PTR [rcx+12], xmm2
	movss	xmm0, DWORD PTR e11$1$[rsp]
; Line 168
	lea	r11, QWORD PTR [rax]
	movaps	xmm6, XMMWORD PTR [r11-24]
	movaps	xmm7, XMMWORD PTR [r11-40]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm9, XMMWORD PTR [r11-72]
	movaps	xmm10, XMMWORD PTR [r11-88]
	movaps	xmm11, XMMWORD PTR [r11-104]
	movaps	xmm12, XMMWORD PTR [r11-120]
	movaps	xmm14, XMMWORD PTR [rsp+64]
	movaps	xmm15, XMMWORD PTR [rsp+48]
	movss	DWORD PTR [rcx+60], xmm13
	movaps	xmm13, XMMWORD PTR [rsp+80]
	movss	DWORD PTR [rcx+44], xmm0
	mov	rsp, r11
	ret	0
?postmul32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::postmul32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?premul32@MAT4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
tv1285 = 0
tv1325 = 4
tv1234 = 8
tv1299 = 12
tv1274 = 16
tv1302 = 20
tv1300 = 24
tv1282 = 28
tv1266 = 32
tv1288 = 36
tv1286 = 40
tv1304 = 44
tv1323 = 48
tv1321 = 52
e11$1$ = 56
tv1292 = 240
dst_matrix_addr$ = 240
tv1268 = 248
src_matrix_addr$ = 248
tv1295 = 256
tv1290 = 264
?premul32@MAT4@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::MAT4::premul32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 152
$LN4:
	mov	rax, rsp
	sub	rsp, 232				; 000000e8H
; Line 157
	movss	xmm1, DWORD PTR [rdx+12]
	movss	xmm0, DWORD PTR [rdx+20]
	movaps	xmm2, xmm1
	movss	xmm3, DWORD PTR [rdx+28]
	movss	xmm4, DWORD PTR [rdx+44]
	movss	xmm5, DWORD PTR [rdx+60]
	movss	DWORD PTR tv1325[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR tv1268[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR tv1292[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR tv1295[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+24]
	movss	DWORD PTR tv1299[rsp], xmm0
	movaps	XMMWORD PTR [rax-24], xmm6
	movaps	XMMWORD PTR [rax-40], xmm7
	movaps	XMMWORD PTR [rax-56], xmm8
	movaps	XMMWORD PTR [rax-72], xmm9
	movaps	XMMWORD PTR [rax-88], xmm10
	movaps	XMMWORD PTR [rax-104], xmm11
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	XMMWORD PTR [rsp+96], xmm13
	movaps	XMMWORD PTR [rsp+80], xmm14
	movaps	XMMWORD PTR [rsp+64], xmm15
	movss	xmm0, DWORD PTR [rdx+8]
	movss	xmm14, DWORD PTR [rcx+36]
	movss	xmm10, DWORD PTR [rdx+16]
	movss	xmm11, DWORD PTR [rdx]
	movss	xmm8, DWORD PTR [rdx+32]
	movaps	xmm6, xmm11
	movss	xmm9, DWORD PTR [rdx+48]
	movss	xmm15, DWORD PTR [rdx+4]
	movss	xmm12, DWORD PTR [rdx+36]
	movaps	xmm7, xmm15
	movss	xmm13, DWORD PTR [rdx+52]
	movss	DWORD PTR tv1274[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+40]
	movss	DWORD PTR tv1302[rsp], xmm0
	movss	xmm0, DWORD PTR [rdx+56]
	movss	DWORD PTR tv1300[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+20]
	movss	DWORD PTR tv1290[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+16]
	movss	DWORD PTR tv1285[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+24]
	movss	DWORD PTR tv1234[rsp], xmm0
	movss	xmm0, DWORD PTR [rcx+32]
	mulss	xmm2, xmm0
	movss	DWORD PTR tv1304[rsp], xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm14
	movss	DWORD PTR tv1282[rsp], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, DWORD PTR [rcx+40]
	addss	xmm2, xmm0
	movss	DWORD PTR tv1266[rsp], xmm3
	movss	xmm3, DWORD PTR [rcx+52]
	movaps	xmm0, xmm5
	mulss	xmm0, DWORD PTR [rcx+44]
	movss	DWORD PTR tv1288[rsp], xmm4
	movss	xmm4, DWORD PTR [rcx+56]
	addss	xmm2, xmm1
	movaps	xmm1, xmm4
	movss	DWORD PTR tv1286[rsp], xmm5
	movss	xmm5, DWORD PTR [rcx+60]
	mulss	xmm1, xmm8
	addss	xmm2, xmm0
	movss	DWORD PTR tv1323[rsp], xmm12
	movaps	xmm0, xmm10
	movss	DWORD PTR tv1321[rsp], xmm13
	mulss	xmm0, xmm3
	movss	DWORD PTR e11$1$[rsp], xmm2
	movss	xmm2, DWORD PTR [rcx+48]
	mulss	xmm6, xmm2
	mulss	xmm7, xmm2
	addss	xmm6, xmm0
	movaps	xmm0, xmm5
	mulss	xmm0, xmm9
	addss	xmm6, xmm1
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR tv1325[rsp]
	movaps	xmm1, xmm12
	movss	xmm12, DWORD PTR tv1274[rsp]
	mulss	xmm0, xmm3
	mulss	xmm12, xmm2
	addss	xmm7, xmm0
	mulss	xmm1, xmm4
	movaps	xmm0, xmm13
	movss	DWORD PTR [rcx+48], xmm6
	movss	xmm13, DWORD PTR tv1282[rsp]
	movss	xmm6, DWORD PTR tv1323[rsp]
	mulss	xmm0, xmm5
	addss	xmm7, xmm1
	movss	xmm1, DWORD PTR tv1302[rsp]
	mulss	xmm13, xmm2
	movaps	xmm2, xmm11
	mulss	xmm2, DWORD PTR tv1292[rsp]
	addss	xmm7, xmm0
	movss	xmm0, DWORD PTR tv1299[rsp]
	mulss	xmm0, xmm3
	mulss	xmm1, xmm4
	addss	xmm12, xmm0
	movss	xmm0, DWORD PTR tv1300[rsp]
	mulss	xmm0, xmm5
	addss	xmm12, xmm1
	movss	xmm1, DWORD PTR tv1288[rsp]
	mulss	xmm1, xmm4
	movss	xmm4, DWORD PTR [rcx+40]
	addss	xmm12, xmm0
	movss	xmm0, DWORD PTR tv1266[rsp]
	mulss	xmm0, xmm3
	movss	xmm3, DWORD PTR tv1290[rsp]
	mulss	xmm3, xmm10
	addss	xmm13, xmm0
	movss	xmm0, DWORD PTR tv1286[rsp]
	mulss	xmm0, xmm5
	movss	xmm5, DWORD PTR tv1304[rsp]
	addss	xmm13, xmm1
	movss	xmm1, DWORD PTR tv1295[rsp]
	mulss	xmm1, xmm8
	addss	xmm13, xmm0
	movaps	xmm0, xmm10
	mulss	xmm0, DWORD PTR tv1268[rsp]
	mulss	xmm10, xmm14
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR [rcx+12]
	mulss	xmm0, xmm9
	addss	xmm2, xmm1
	movaps	xmm1, xmm8
	mulss	xmm1, DWORD PTR tv1234[rsp]
	mulss	xmm8, xmm4
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1285[rsp]
	mulss	xmm0, xmm11
	mulss	xmm11, xmm5
	addss	xmm3, xmm0
	movss	DWORD PTR [rcx], xmm2
	movss	xmm2, DWORD PTR tv1268[rsp]
	movaps	xmm0, xmm9
	mulss	xmm0, DWORD PTR [rcx+28]
	addss	xmm11, xmm10
	movss	xmm10, DWORD PTR tv1325[rsp]
	addss	xmm3, xmm1
	mulss	xmm2, xmm10
	movss	xmm1, DWORD PTR tv1295[rsp]
	addss	xmm11, xmm8
	movss	xmm8, DWORD PTR [rcx+44]
	mulss	xmm9, xmm8
	addss	xmm3, xmm0
	mulss	xmm1, xmm6
	movaps	xmm0, xmm15
	addss	xmm11, xmm9
	mulss	xmm0, DWORD PTR tv1292[rsp]
	movss	xmm9, DWORD PTR tv1321[rsp]
	movss	DWORD PTR [rcx+16], xmm3
	addss	xmm2, xmm0
	movss	DWORD PTR [rcx+32], xmm11
	movss	xmm0, DWORD PTR [rcx+12]
	mulss	xmm0, xmm9
	addss	xmm2, xmm1
	addss	xmm2, xmm0
	movss	xmm3, DWORD PTR tv1285[rsp]
	movaps	xmm1, xmm6
	movss	xmm0, DWORD PTR tv1290[rsp]
	movss	xmm11, DWORD PTR tv1234[rsp]
	mulss	xmm0, xmm10
	mulss	xmm3, xmm15
	mulss	xmm1, xmm11
	addss	xmm3, xmm0
	movss	DWORD PTR [rcx+4], xmm2
	movss	xmm2, DWORD PTR tv1268[rsp]
	movaps	xmm0, xmm9
	mulss	xmm0, DWORD PTR [rcx+28]
	movss	DWORD PTR [rcx+52], xmm7
	movss	xmm7, DWORD PTR tv1302[rsp]
	addss	xmm3, xmm1
	movaps	xmm1, xmm5
	mulss	xmm10, xmm14
	mulss	xmm1, xmm15
	movss	xmm15, DWORD PTR tv1285[rsp]
	addss	xmm3, xmm0
	movss	xmm0, DWORD PTR tv1292[rsp]
	addss	xmm1, xmm10
	mulss	xmm6, xmm4
	movss	xmm10, DWORD PTR tv1299[rsp]
	mulss	xmm2, xmm10
	addss	xmm1, xmm6
	movss	DWORD PTR [rcx+20], xmm3
	movss	xmm6, DWORD PTR tv1274[rsp]
	mulss	xmm0, xmm6
	mulss	xmm5, xmm6
	addss	xmm2, xmm0
	mulss	xmm9, xmm8
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rcx+56], xmm12
	addss	xmm1, xmm9
	movss	xmm9, DWORD PTR tv1300[rsp]
	mulss	xmm0, xmm9
	movss	DWORD PTR [rcx+36], xmm1
	movss	xmm1, DWORD PTR tv1295[rsp]
	mulss	xmm1, xmm7
	addss	xmm2, xmm1
	movaps	xmm1, xmm7
	mulss	xmm7, xmm4
	movss	xmm4, DWORD PTR tv1266[rsp]
	mulss	xmm1, xmm11
	addss	xmm2, xmm0
	movaps	xmm0, xmm15
	mulss	xmm15, DWORD PTR tv1282[rsp]
	mulss	xmm0, xmm6
	movss	xmm6, DWORD PTR tv1286[rsp]
	movss	DWORD PTR [rcx+8], xmm2
	movss	xmm2, DWORD PTR tv1290[rsp]
	movaps	xmm3, xmm2
	mulss	xmm2, xmm4
	mulss	xmm3, xmm10
	mulss	xmm10, xmm14
	addss	xmm15, xmm2
	addss	xmm3, xmm0
	movaps	xmm0, xmm9
	mulss	xmm0, DWORD PTR [rcx+28]
	addss	xmm10, xmm5
	mulss	xmm9, xmm8
	movss	xmm5, DWORD PTR tv1295[rsp]
	addss	xmm3, xmm1
	addss	xmm10, xmm7
	movss	xmm7, DWORD PTR tv1292[rsp]
	mulss	xmm7, DWORD PTR tv1282[rsp]
	addss	xmm3, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR tv1268[rsp]
	addss	xmm10, xmm9
	addss	xmm7, xmm0
	movss	DWORD PTR [rcx+24], xmm3
	movss	xmm0, DWORD PTR tv1288[rsp]
	mulss	xmm5, xmm0
	movss	DWORD PTR [rcx+40], xmm10
	addss	xmm7, xmm5
	movss	xmm5, DWORD PTR [rcx+12]
	mulss	xmm5, xmm6
	addss	xmm7, xmm5
	movss	DWORD PTR [rcx+12], xmm7
	mulss	xmm6, DWORD PTR [rcx+28]
; Line 158
	lea	r11, QWORD PTR [rax]
	movaps	xmm7, XMMWORD PTR [r11-40]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm9, XMMWORD PTR [r11-72]
	movaps	xmm10, XMMWORD PTR [r11-88]
	movaps	xmm12, XMMWORD PTR [r11-120]
	movaps	xmm14, XMMWORD PTR [rsp+80]
	mulss	xmm0, xmm11
	movaps	xmm11, XMMWORD PTR [r11-104]
	movss	DWORD PTR [rcx+60], xmm13
	movaps	xmm13, XMMWORD PTR [rsp+96]
	addss	xmm15, xmm0
	movss	xmm0, DWORD PTR e11$1$[rsp]
	movss	DWORD PTR [rcx+44], xmm0
	addss	xmm15, xmm6
	movaps	xmm6, XMMWORD PTR [r11-24]
	movss	DWORD PTR [rcx+28], xmm15
	movaps	xmm15, XMMWORD PTR [rsp+64]
	mov	rsp, r11
	ret	0
?premul32@MAT4@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::MAT4::premul32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?set32@MAT4@DATA@XGK@@YAXPEAXMMMMMMMMMMMMMMMM@Z
_TEXT	SEGMENT
dst$ = 8
e0$ = 16
e4$ = 24
e8$ = 32
e12$ = 40
e1$ = 48
e5$ = 56
e9$ = 64
e13$ = 72
e2$ = 80
e6$ = 88
e10$ = 96
e14$ = 104
e3$ = 112
e7$ = 120
e11$ = 128
e15$ = 136
?set32@MAT4@DATA@XGK@@YAXPEAXMMMMMMMMMMMMMMMM@Z PROC	; XGK::DATA::MAT4::set32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\mat4\mat4-32.cpp
; Line 140
	movss	xmm0, DWORD PTR e12$[rsp]
	movss	DWORD PTR [rcx+48], xmm0
	movss	xmm0, DWORD PTR e5$[rsp]
	movss	DWORD PTR [rcx], xmm1
	movss	xmm1, DWORD PTR e1$[rsp]
	movss	DWORD PTR [rcx+20], xmm0
	movss	xmm0, DWORD PTR e13$[rsp]
	movss	DWORD PTR [rcx+4], xmm1
	movss	xmm1, DWORD PTR e9$[rsp]
	movss	DWORD PTR [rcx+52], xmm0
	movss	xmm0, DWORD PTR e6$[rsp]
	movss	DWORD PTR [rcx+36], xmm1
	movss	xmm1, DWORD PTR e2$[rsp]
	movss	DWORD PTR [rcx+24], xmm0
	movss	xmm0, DWORD PTR e14$[rsp]
	movss	DWORD PTR [rcx+8], xmm1
	movss	xmm1, DWORD PTR e10$[rsp]
	movss	DWORD PTR [rcx+56], xmm0
	movss	xmm0, DWORD PTR e7$[rsp]
	movss	DWORD PTR [rcx+40], xmm1
	movss	xmm1, DWORD PTR e3$[rsp]
	movss	DWORD PTR [rcx+28], xmm0
	movss	xmm0, DWORD PTR e15$[rsp]
	movss	DWORD PTR [rcx+12], xmm1
	movss	xmm1, DWORD PTR e11$[rsp]
	movss	DWORD PTR [rcx+60], xmm0
	movss	DWORD PTR [rcx+16], xmm2
	movss	DWORD PTR [rcx+32], xmm3
	movss	DWORD PTR [rcx+44], xmm1
; Line 148
	ret	0
?set32@MAT4@DATA@XGK@@YAXPEAXMMMMMMMMMMMMMMMM@Z ENDP	; XGK::DATA::MAT4::set32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?tan@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 8
?tan@@YAMM@Z PROC					; tan, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 242
	jmp	tanf
?tan@@YAMM@Z ENDP					; tan
_TEXT	ENDS
END
