; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?set@VEC4@DATA@XGK@@3P6AXPEAXMMMM@ZEA		; XGK::DATA::VEC4::set
PUBLIC	?add@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA		; XGK::DATA::VEC4::add
PUBLIC	?adds@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::VEC4::adds
PUBLIC	?sub@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA		; XGK::DATA::VEC4::sub
PUBLIC	?subs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::VEC4::subs
PUBLIC	?mul@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA		; XGK::DATA::VEC4::mul
PUBLIC	?muls@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::VEC4::muls
PUBLIC	?div@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA		; XGK::DATA::VEC4::div
PUBLIC	?divs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::VEC4::divs
_BSS	SEGMENT
?set@VEC4@DATA@XGK@@3P6AXPEAXMMMM@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::set
?add@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::add
?adds@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::adds
?sub@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::sub
?subs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::subs
?mul@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::mul
?muls@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::muls
?div@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::div
?divs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::VEC4::divs
_BSS	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	?copy@VEC4@DATA@XGK@@YAXPEAX0@Z			; XGK::DATA::VEC4::copy
PUBLIC	?reset@VEC4@DATA@XGK@@YAXPEAX@Z			; XGK::DATA::VEC4::reset
PUBLIC	?simd32@VEC4@DATA@XGK@@YAXXZ			; XGK::DATA::VEC4::simd32
PUBLIC	?simd128@VEC4@DATA@XGK@@YAXXZ			; XGK::DATA::VEC4::simd128
PUBLIC	?print@VEC4@DATA@XGK@@YAXPEAX@Z			; XGK::DATA::VEC4::print
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0N@MDOCIACE@?$CFf?5?$CFf?5?$CFf?5?$CFf?6@	; `string'
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	?set32@VEC4@DATA@XGK@@YAXPEAXMMMM@Z:PROC	; XGK::DATA::VEC4::set32
EXTRN	?add32@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::add32
EXTRN	?adds32@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::adds32
EXTRN	?sub32@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::sub32
EXTRN	?subs32@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::subs32
EXTRN	?mul32@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::mul32
EXTRN	?muls32@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::muls32
EXTRN	?div32@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::div32
EXTRN	?divs32@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::divs32
EXTRN	?set128@VEC4@DATA@XGK@@YAXPEAXMMMM@Z:PROC	; XGK::DATA::VEC4::set128
EXTRN	?add128@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::add128
EXTRN	?adds128@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::adds128
EXTRN	?sub128@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::sub128
EXTRN	?subs128@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::subs128
EXTRN	?mul128@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::mul128
EXTRN	?muls128@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::muls128
EXTRN	?div128@VEC4@DATA@XGK@@YAXPEAX0@Z:PROC		; XGK::DATA::VEC4::div128
EXTRN	?divs128@VEC4@DATA@XGK@@YAXPEAXM@Z:PROC		; XGK::DATA::VEC4::divs128
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN6
	DD	imagerel $LN6+85
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?print@VEC4@DATA@XGK@@YAXPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$?print@VEC4@DATA@XGK@@YAXPEAX@Z
pdata	ENDS
;	COMDAT ??_C@_0N@MDOCIACE@?$CFf?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0N@MDOCIACE@?$CFf?5?$CFf?5?$CFf?5?$CFf?6@ DB '%f %f %f %f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?print@VEC4@DATA@XGK@@YAXPEAX@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?print@VEC4@DATA@XGK@@YAXPEAX@Z
_TEXT	SEGMENT
data$ = 64
?print@VEC4@DATA@XGK@@YAXPEAX@Z PROC			; XGK::DATA::VEC4::print, COMDAT
; File E:\reps\denis-belov\xgk\src\data\vec4\vec4.cpp
; Line 95
$LN4:
	sub	rsp, 56					; 00000038H
	movss	xmm3, DWORD PTR [rcx+8]
	movss	xmm2, DWORD PTR [rcx+4]
	movss	xmm1, DWORD PTR [rcx]
	movss	xmm0, DWORD PTR [rcx+12]
; Line 99
	lea	rcx, OFFSET FLAT:??_C@_0N@MDOCIACE@?$CFf?5?$CFf?5?$CFf?5?$CFf?6@
	cvtps2pd xmm3, xmm3
	cvtps2pd xmm2, xmm2
	cvtps2pd xmm1, xmm1
	cvtps2pd xmm0, xmm0
	movq	r9, xmm3
	movq	r8, xmm2
	movq	rdx, xmm1
	movsd	QWORD PTR [rsp+32], xmm0
	call	printf
; Line 100
	add	rsp, 56					; 00000038H
	ret	0
?print@VEC4@DATA@XGK@@YAXPEAX@Z ENDP			; XGK::DATA::VEC4::print
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?simd128@VEC4@DATA@XGK@@YAXXZ
_TEXT	SEGMENT
?simd128@VEC4@DATA@XGK@@YAXXZ PROC			; XGK::DATA::VEC4::simd128, COMDAT
; File E:\reps\denis-belov\xgk\src\data\vec4\vec4.cpp
; Line 82
	lea	rax, OFFSET FLAT:?set128@VEC4@DATA@XGK@@YAXPEAXMMMM@Z ; XGK::DATA::VEC4::set128
	mov	QWORD PTR ?set@VEC4@DATA@XGK@@3P6AXPEAXMMMM@ZEA, rax ; XGK::DATA::VEC4::set
; Line 83
	lea	rax, OFFSET FLAT:?add128@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::add128
	mov	QWORD PTR ?add@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::add
; Line 84
	lea	rax, OFFSET FLAT:?adds128@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::adds128
	mov	QWORD PTR ?adds@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::adds
; Line 85
	lea	rax, OFFSET FLAT:?sub128@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::sub128
	mov	QWORD PTR ?sub@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::sub
; Line 86
	lea	rax, OFFSET FLAT:?subs128@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::subs128
	mov	QWORD PTR ?subs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::subs
; Line 87
	lea	rax, OFFSET FLAT:?mul128@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::mul128
	mov	QWORD PTR ?mul@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::mul
; Line 88
	lea	rax, OFFSET FLAT:?muls128@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::muls128
	mov	QWORD PTR ?muls@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::muls
; Line 89
	lea	rax, OFFSET FLAT:?div128@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::div128
	mov	QWORD PTR ?div@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::div
; Line 90
	lea	rax, OFFSET FLAT:?divs128@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::divs128
	mov	QWORD PTR ?divs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::divs
; Line 91
	ret	0
?simd128@VEC4@DATA@XGK@@YAXXZ ENDP			; XGK::DATA::VEC4::simd128
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?simd32@VEC4@DATA@XGK@@YAXXZ
_TEXT	SEGMENT
?simd32@VEC4@DATA@XGK@@YAXXZ PROC			; XGK::DATA::VEC4::simd32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\vec4\vec4.cpp
; Line 69
	lea	rax, OFFSET FLAT:?set32@VEC4@DATA@XGK@@YAXPEAXMMMM@Z ; XGK::DATA::VEC4::set32
	mov	QWORD PTR ?set@VEC4@DATA@XGK@@3P6AXPEAXMMMM@ZEA, rax ; XGK::DATA::VEC4::set
; Line 70
	lea	rax, OFFSET FLAT:?add32@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::add32
	mov	QWORD PTR ?add@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::add
; Line 71
	lea	rax, OFFSET FLAT:?adds32@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::adds32
	mov	QWORD PTR ?adds@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::adds
; Line 72
	lea	rax, OFFSET FLAT:?sub32@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::sub32
	mov	QWORD PTR ?sub@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::sub
; Line 73
	lea	rax, OFFSET FLAT:?subs32@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::subs32
	mov	QWORD PTR ?subs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::subs
; Line 74
	lea	rax, OFFSET FLAT:?mul32@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::mul32
	mov	QWORD PTR ?mul@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::mul
; Line 75
	lea	rax, OFFSET FLAT:?muls32@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::muls32
	mov	QWORD PTR ?muls@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::muls
; Line 76
	lea	rax, OFFSET FLAT:?div32@VEC4@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::VEC4::div32
	mov	QWORD PTR ?div@VEC4@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::VEC4::div
; Line 77
	lea	rax, OFFSET FLAT:?divs32@VEC4@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::VEC4::divs32
	mov	QWORD PTR ?divs@VEC4@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::VEC4::divs
; Line 78
	ret	0
?simd32@VEC4@DATA@XGK@@YAXXZ ENDP			; XGK::DATA::VEC4::simd32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reset@VEC4@DATA@XGK@@YAXPEAX@Z
_TEXT	SEGMENT
data$ = 8
?reset@VEC4@DATA@XGK@@YAXPEAX@Z PROC			; XGK::DATA::VEC4::reset, COMDAT
; File E:\reps\denis-belov\xgk\src\data\vec4\vec4.cpp
; Line 60
	xorps	xmm0, xmm0
; Line 62
	movups	XMMWORD PTR [rcx], xmm0
; Line 63
	ret	0
?reset@VEC4@DATA@XGK@@YAXPEAX@Z ENDP			; XGK::DATA::VEC4::reset
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?copy@VEC4@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
data0$ = 8
data1$ = 16
?copy@VEC4@DATA@XGK@@YAXPEAX0@Z PROC			; XGK::DATA::VEC4::copy, COMDAT
; File E:\reps\denis-belov\xgk\src\data\vec4\vec4.cpp
; Line 55
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
; Line 56
	ret	0
?copy@VEC4@DATA@XGK@@YAXPEAX0@Z ENDP			; XGK::DATA::VEC4::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT printf
_TEXT	SEGMENT
_Format$ = 80
printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 954
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
; Line 957
	lea	rsi, QWORD PTR _Format$[rsp+8]
; Line 958
	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	mov	rbx, rax
; Line 643
	call	__local_stdio_printf_options
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rsi
	mov	r8, rdi
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf
; Line 961
	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 642
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbp, rcx
; Line 643
	call	__local_stdio_printf_options
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], rbx
	mov	r8, rsi
	mov	rdx, rbp
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf
; Line 644
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
; Line 88
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
