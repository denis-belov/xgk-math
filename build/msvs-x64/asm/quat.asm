; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?premul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA		; XGK::DATA::QUAT::premul
PUBLIC	?postmul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA		; XGK::DATA::QUAT::postmul
PUBLIC	?makeRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA		; XGK::DATA::QUAT::makeRot
PUBLIC	?preRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA		; XGK::DATA::QUAT::preRot
PUBLIC	?postRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA		; XGK::DATA::QUAT::postRot
PUBLIC	?makeRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::makeRotX
PUBLIC	?preRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::preRotX
PUBLIC	?postRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::postRotX
PUBLIC	?makeRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::makeRotY
PUBLIC	?preRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::preRotY
PUBLIC	?postRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::postRotY
PUBLIC	?makeRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::makeRotZ
PUBLIC	?preRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::preRotZ
PUBLIC	?postRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA		; XGK::DATA::QUAT::postRotZ
_BSS	SEGMENT
?premul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::premul
?postmul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::postmul
?makeRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::makeRot
?preRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::preRot
?postRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::postRot
?makeRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::makeRotX
?preRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::preRotX
?postRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::postRotX
?makeRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::makeRotY
?preRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::preRotY
?postRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::postRotY
?makeRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::makeRotZ
?preRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::preRotZ
?postRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA DQ 01H DUP (?)	; XGK::DATA::QUAT::postRotZ
_BSS	ENDS
CONST	SEGMENT
?CONST_IDENT@QUAT@DATA@XGK@@3QBMB DD 000000000r	; 0	; XGK::DATA::QUAT::CONST_IDENT
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	?ident@QUAT@DATA@XGK@@YAXPEAX@Z			; XGK::DATA::QUAT::ident
PUBLIC	?len@QUAT@DATA@XGK@@YAMPEAX@Z			; XGK::DATA::QUAT::len
PUBLIC	?lens@QUAT@DATA@XGK@@YAMPEAX@Z			; XGK::DATA::QUAT::lens
PUBLIC	?norm@QUAT@DATA@XGK@@YAXPEAX@Z			; XGK::DATA::QUAT::norm
PUBLIC	?simd32@QUAT@DATA@XGK@@YAXXZ			; XGK::DATA::QUAT::simd32
PUBLIC	?simd128@QUAT@DATA@XGK@@YAXXZ			; XGK::DATA::QUAT::simd128
PUBLIC	__real@3f800000
EXTRN	?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z:PROC	; XGK::DATA::QUAT::premul32
EXTRN	?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z:PROC	; XGK::DATA::QUAT::postmul32
EXTRN	?makeRot32@QUAT@DATA@XGK@@YAXPEAX0M@Z:PROC	; XGK::DATA::QUAT::makeRot32
EXTRN	?preRot32@QUAT@DATA@XGK@@YAXPEAX0M@Z:PROC	; XGK::DATA::QUAT::preRot32
EXTRN	?postRot32@QUAT@DATA@XGK@@YAXPEAX0M@Z:PROC	; XGK::DATA::QUAT::postRot32
EXTRN	?makeRotX32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::makeRotX32
EXTRN	?preRotX32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::preRotX32
EXTRN	?postRotX32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::postRotX32
EXTRN	?makeRotY32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::makeRotY32
EXTRN	?preRotY32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::preRotY32
EXTRN	?postRotY32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::postRotY32
EXTRN	?makeRotZ32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::makeRotZ32
EXTRN	?preRotZ32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::preRotZ32
EXTRN	?postRotZ32@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::postRotZ32
EXTRN	?premul128@QUAT@DATA@XGK@@YAXPEAX0@Z:PROC	; XGK::DATA::QUAT::premul128
EXTRN	?postmul128@QUAT@DATA@XGK@@YAXPEAX0@Z:PROC	; XGK::DATA::QUAT::postmul128
EXTRN	?makeRot128@QUAT@DATA@XGK@@YAXPEAX0M@Z:PROC	; XGK::DATA::QUAT::makeRot128
EXTRN	?preRot128@QUAT@DATA@XGK@@YAXPEAX0M@Z:PROC	; XGK::DATA::QUAT::preRot128
EXTRN	?postRot128@QUAT@DATA@XGK@@YAXPEAX0M@Z:PROC	; XGK::DATA::QUAT::postRot128
EXTRN	?makeRotX128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::makeRotX128
EXTRN	?preRotX128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::preRotX128
EXTRN	?postRotX128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::postRotX128
EXTRN	?makeRotY128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::makeRotY128
EXTRN	?preRotY128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::preRotY128
EXTRN	?postRotY128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::postRotY128
EXTRN	?makeRotZ128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::makeRotZ128
EXTRN	?preRotZ128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::preRotZ128
EXTRN	?postRotZ128@QUAT@DATA@XGK@@YAXPEAXM@Z:PROC	; XGK::DATA::QUAT::postRotZ128
EXTRN	sqrtf:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?norm@QUAT@DATA@XGK@@YAXPEAX@Z DD imagerel $LN20
	DD	imagerel $LN20+92
	DD	imagerel $unwind$?norm@QUAT@DATA@XGK@@YAXPEAX@Z
pdata	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?norm@QUAT@DATA@XGK@@YAXPEAX@Z DD 020601H
	DD	030023206H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?simd128@QUAT@DATA@XGK@@YAXXZ
_TEXT	SEGMENT
?simd128@QUAT@DATA@XGK@@YAXXZ PROC			; XGK::DATA::QUAT::simd128, COMDAT
; File E:\reps\denis-belov\xgk\src\data\quat\quat.cpp
; Line 129
	lea	rax, OFFSET FLAT:?premul128@QUAT@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::QUAT::premul128
	mov	QWORD PTR ?premul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::QUAT::premul
; Line 130
	lea	rax, OFFSET FLAT:?postmul128@QUAT@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::QUAT::postmul128
	mov	QWORD PTR ?postmul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::QUAT::postmul
; Line 131
	lea	rax, OFFSET FLAT:?makeRot128@QUAT@DATA@XGK@@YAXPEAX0M@Z ; XGK::DATA::QUAT::makeRot128
	mov	QWORD PTR ?makeRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA, rax ; XGK::DATA::QUAT::makeRot
; Line 132
	lea	rax, OFFSET FLAT:?preRot128@QUAT@DATA@XGK@@YAXPEAX0M@Z ; XGK::DATA::QUAT::preRot128
	mov	QWORD PTR ?preRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA, rax ; XGK::DATA::QUAT::preRot
; Line 133
	lea	rax, OFFSET FLAT:?postRot128@QUAT@DATA@XGK@@YAXPEAX0M@Z ; XGK::DATA::QUAT::postRot128
	mov	QWORD PTR ?postRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA, rax ; XGK::DATA::QUAT::postRot
; Line 134
	lea	rax, OFFSET FLAT:?makeRotX128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::makeRotX128
	mov	QWORD PTR ?makeRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::makeRotX
; Line 135
	lea	rax, OFFSET FLAT:?preRotX128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::preRotX128
	mov	QWORD PTR ?preRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::preRotX
; Line 136
	lea	rax, OFFSET FLAT:?postRotX128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::postRotX128
	mov	QWORD PTR ?postRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::postRotX
; Line 137
	lea	rax, OFFSET FLAT:?makeRotY128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::makeRotY128
	mov	QWORD PTR ?makeRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::makeRotY
; Line 138
	lea	rax, OFFSET FLAT:?preRotY128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::preRotY128
	mov	QWORD PTR ?preRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::preRotY
; Line 139
	lea	rax, OFFSET FLAT:?postRotY128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::postRotY128
	mov	QWORD PTR ?postRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::postRotY
; Line 140
	lea	rax, OFFSET FLAT:?makeRotZ128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::makeRotZ128
	mov	QWORD PTR ?makeRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::makeRotZ
; Line 141
	lea	rax, OFFSET FLAT:?preRotZ128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::preRotZ128
	mov	QWORD PTR ?preRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::preRotZ
; Line 142
	lea	rax, OFFSET FLAT:?postRotZ128@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::postRotZ128
	mov	QWORD PTR ?postRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::postRotZ
; Line 143
	ret	0
?simd128@QUAT@DATA@XGK@@YAXXZ ENDP			; XGK::DATA::QUAT::simd128
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?simd32@QUAT@DATA@XGK@@YAXXZ
_TEXT	SEGMENT
?simd32@QUAT@DATA@XGK@@YAXXZ PROC			; XGK::DATA::QUAT::simd32, COMDAT
; File E:\reps\denis-belov\xgk\src\data\quat\quat.cpp
; Line 111
	lea	rax, OFFSET FLAT:?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::QUAT::premul32
	mov	QWORD PTR ?premul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::QUAT::premul
; Line 112
	lea	rax, OFFSET FLAT:?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z ; XGK::DATA::QUAT::postmul32
	mov	QWORD PTR ?postmul@QUAT@DATA@XGK@@3P6AXPEAX0@ZEA, rax ; XGK::DATA::QUAT::postmul
; Line 113
	lea	rax, OFFSET FLAT:?makeRot32@QUAT@DATA@XGK@@YAXPEAX0M@Z ; XGK::DATA::QUAT::makeRot32
	mov	QWORD PTR ?makeRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA, rax ; XGK::DATA::QUAT::makeRot
; Line 114
	lea	rax, OFFSET FLAT:?preRot32@QUAT@DATA@XGK@@YAXPEAX0M@Z ; XGK::DATA::QUAT::preRot32
	mov	QWORD PTR ?preRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA, rax ; XGK::DATA::QUAT::preRot
; Line 115
	lea	rax, OFFSET FLAT:?postRot32@QUAT@DATA@XGK@@YAXPEAX0M@Z ; XGK::DATA::QUAT::postRot32
	mov	QWORD PTR ?postRot@QUAT@DATA@XGK@@3P6AXPEAX0M@ZEA, rax ; XGK::DATA::QUAT::postRot
; Line 116
	lea	rax, OFFSET FLAT:?makeRotX32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::makeRotX32
	mov	QWORD PTR ?makeRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::makeRotX
; Line 117
	lea	rax, OFFSET FLAT:?preRotX32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::preRotX32
	mov	QWORD PTR ?preRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::preRotX
; Line 118
	lea	rax, OFFSET FLAT:?postRotX32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::postRotX32
	mov	QWORD PTR ?postRotX@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::postRotX
; Line 119
	lea	rax, OFFSET FLAT:?makeRotY32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::makeRotY32
	mov	QWORD PTR ?makeRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::makeRotY
; Line 120
	lea	rax, OFFSET FLAT:?preRotY32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::preRotY32
	mov	QWORD PTR ?preRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::preRotY
; Line 121
	lea	rax, OFFSET FLAT:?postRotY32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::postRotY32
	mov	QWORD PTR ?postRotY@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::postRotY
; Line 122
	lea	rax, OFFSET FLAT:?makeRotZ32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::makeRotZ32
	mov	QWORD PTR ?makeRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::makeRotZ
; Line 123
	lea	rax, OFFSET FLAT:?preRotZ32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::preRotZ32
	mov	QWORD PTR ?preRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::preRotZ
; Line 124
	lea	rax, OFFSET FLAT:?postRotZ32@QUAT@DATA@XGK@@YAXPEAXM@Z ; XGK::DATA::QUAT::postRotZ32
	mov	QWORD PTR ?postRotZ@QUAT@DATA@XGK@@3P6AXPEAXM@ZEA, rax ; XGK::DATA::QUAT::postRotZ
; Line 125
	ret	0
?simd32@QUAT@DATA@XGK@@YAXXZ ENDP			; XGK::DATA::QUAT::simd32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?norm@QUAT@DATA@XGK@@YAXPEAX@Z
_TEXT	SEGMENT
data$ = 48
?norm@QUAT@DATA@XGK@@YAXPEAX@Z PROC			; XGK::DATA::QUAT::norm, COMDAT
; File E:\reps\denis-belov\xgk\src\data\quat\quat.cpp
; Line 93
$LN20:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 98
	movss	xmm1, DWORD PTR [rcx+4]
	mov	rbx, rcx
	movss	xmm0, DWORD PTR [rcx]
	movss	xmm2, DWORD PTR [rcx+8]
	movss	xmm3, DWORD PTR [rcx+12]
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	mulss	xmm2, xmm2
	addss	xmm0, xmm1
	mulss	xmm3, xmm3
	addss	xmm0, xmm2
	addss	xmm0, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 238
	call	sqrtf
; File E:\reps\denis-belov\xgk\src\data\quat\quat.cpp
; Line 98
	movss	xmm2, DWORD PTR __real@3f800000
	divss	xmm2, xmm0
; Line 100
	movups	xmm0, XMMWORD PTR [rbx]
	shufps	xmm2, xmm2, 0
	mulps	xmm2, xmm0
	movups	XMMWORD PTR [rbx], xmm2
; Line 104
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?norm@QUAT@DATA@XGK@@YAXPEAX@Z ENDP			; XGK::DATA::QUAT::norm
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?lens@QUAT@DATA@XGK@@YAMPEAX@Z
_TEXT	SEGMENT
data$ = 8
?lens@QUAT@DATA@XGK@@YAMPEAX@Z PROC			; XGK::DATA::QUAT::lens, COMDAT
; File E:\reps\denis-belov\xgk\src\data\quat\quat.cpp
; Line 88
	movss	xmm1, DWORD PTR [rcx+4]
	movss	xmm0, DWORD PTR [rcx]
	movss	xmm2, DWORD PTR [rcx+8]
	movss	xmm3, DWORD PTR [rcx+12]
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	mulss	xmm2, xmm2
	addss	xmm0, xmm1
	mulss	xmm3, xmm3
	addss	xmm0, xmm2
	addss	xmm0, xmm3
; Line 89
	ret	0
?lens@QUAT@DATA@XGK@@YAMPEAX@Z ENDP			; XGK::DATA::QUAT::lens
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?len@QUAT@DATA@XGK@@YAMPEAX@Z
_TEXT	SEGMENT
data$ = 8
?len@QUAT@DATA@XGK@@YAMPEAX@Z PROC			; XGK::DATA::QUAT::len, COMDAT
; File E:\reps\denis-belov\xgk\src\data\quat\quat.cpp
; Line 79
	movss	xmm1, DWORD PTR [rcx+4]
	movss	xmm0, DWORD PTR [rcx]
	movss	xmm2, DWORD PTR [rcx+8]
	movss	xmm3, DWORD PTR [rcx+12]
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	mulss	xmm2, xmm2
	addss	xmm0, xmm1
	mulss	xmm3, xmm3
	addss	xmm0, xmm2
	addss	xmm0, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 238
	jmp	sqrtf
?len@QUAT@DATA@XGK@@YAMPEAX@Z ENDP			; XGK::DATA::QUAT::len
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ident@QUAT@DATA@XGK@@YAXPEAX@Z
_TEXT	SEGMENT
data$ = 8
?ident@QUAT@DATA@XGK@@YAXPEAX@Z PROC			; XGK::DATA::QUAT::ident, COMDAT
; File E:\reps\denis-belov\xgk\src\data\quat\quat.cpp
; Line 69
	movaps	xmm0, XMMWORD PTR ?CONST_IDENT@QUAT@DATA@XGK@@3QBMB
	movups	XMMWORD PTR [rcx], xmm0
; Line 70
	ret	0
?ident@QUAT@DATA@XGK@@YAXPEAX@Z ENDP			; XGK::DATA::QUAT::ident
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 8
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 238
	jmp	sqrtf
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
END
